2024-11-14:17:36:53 [INFO    ] [fp.py:202] {'acc_ratio': 0.1,
 'amp': True,
 'batch_size': 256,
 'client_optimizer': 'sgd',
 'dataset': 'cifar10',
 'dataset_path': 'data//cifar10',
 'defense_save_path': 'record/blended_0_1_ViT/defense/fp',
 'device': 'cuda',
 'epochs': 100,
 'frequency_save': 0,
 'img_size': (32, 32, 3),
 'index': None,
 'input_channel': 3,
 'input_height': 32,
 'input_width': 32,
 'lr': 0.01,
 'lr_scheduler': 'CosineAnnealingLR',
 'model': 'vit_b_16',
 'non_blocking': True,
 'num_classes': 10,
 'num_workers': 4,
 'once_prune_ratio': 0.01,
 'pin_memory': True,
 'poison_rate': 0.1,
 'prefetch': False,
 'random_seed': 1,
 'ratio': 0.05,
 'result_file': 'blended_0_1_ViT',
 'sgd_momentum': 0.9,
 'target_label': 0,
 'target_type': 'all2one',
 'terminal_info': ['./defense/fp.py',
                   '--result_file',
                   'blended_0_1_ViT',
                   '--yaml_path',
                   './config/defense/fp/cifar10.yaml',
                   '--dataset',
                   'cifar10',
                   '--ratio',
                   '0.05',
                   '--random_seed',
                   '1'],
 'trigger_type': 'squareTrigger',
 'wd': 0.0005,
 'yaml_path': './config/defense/fp/cifar10.yaml'}
2024-11-14:17:36:53 [DEBUG   ] [fp.py:204] Only INFO or above level log will show in cmd. DEBUG level log only will show in log file.
2024-11-14:17:36:53 [DEBUG   ] [fp.py:208] {'git hash': None,
 'last 3 log': 'commit f2ca5f8f4b58e07a407dd65ca217f11673aba63d\n'
               'Author: soheilzi <soheil.zibakhsh@gmail.com>\n'
               'Date:   Tue Nov 12 09:46:15 2024 -0800\n'
               '\n'
               '    added the adverserial test, added the trojan tests with '
               'MG\n'
               '\n'
               'commit afd704e7564791ddc0ae120c7d2e1581bd3a4f80\n'
               'Author: Yaman <yamanjandali@gmail.com>\n'
               'Date:   Fri Nov 8 16:15:34 2024 -0800\n'
               '\n'
               '    removed added files\n'
               '\n'
               'commit 9bc0c704e4be5beff4562e38a15f0b4e070bb433\n'
               'Author: Yaman <yamanjandali@gmail.com>\n'
               'Date:   Tue Nov 5 10:24:03 2024 -0800\n'
               '\n'
               '    updated train_settings_generate.py file',
 'status': 'On branch main\n'
           "Your branch is up to date with 'origin/main'.\n"
           '\n'
           'Changes not staged for commit:\n'
           '  (use "git add <file>..." to update what will be committed)\n'
           '  (use "git restore <file>..." to discard changes in working '
           'directory)\n'
           '\tmodified:   config/defense/MG/cifar10.yaml\n'
           '\tmodified:   config/defense/fp/cifar10.yaml\n'
           '\tmodified:   config/defense/ft-sam/cifar10.yaml\n'
           '\tmodified:   config/defense/nc/cifar10.yaml\n'
           '\tmodified:   defense/MG.py\n'
           '\tmodified:   defense/MG_utils.py\n'
           '\n'
           'Untracked files:\n'
           '  (use "git add <file>..." to include in what will be committed)\n'
           '\trecord/BadNetsViT/\n'
           '\trecord/badnet_vit/\n'
           '\trecord/blended_0_1_ViT/\n'
           '\n'
           'no changes added to commit (use "git add" and/or "git commit -a")'}
2024-11-14:17:36:53 [INFO    ] [save_load_attack.py:210] key match for attack_result, processing...
2024-11-14:17:36:53 [WARNING ] [save_load_attack.py:221] save_path MUST have 'record' in its abspath, and data_path in attack result MUST have 'data' in its path
2024-11-14:17:36:54 [INFO    ] [bd_dataset_v2.py:133] save file format is .png
2024-11-14:17:36:54 [INFO    ] [bd_dataset_v2.py:133] save file format is .png
2024-11-14:17:36:54 [INFO    ] [bd_dataset_v2.py:133] save file format is .png
2024-11-14:17:36:54 [INFO    ] [bd_dataset_v2.py:133] save file format is .png
2024-11-14:17:36:54 [DEBUG   ] [model_trainer_generate.py:59] image_size ONLY apply for vit!!!
If you use vit make sure you set the image size!
2024-11-14:17:36:54 [DEBUG   ] [model_trainer_generate.py:122] All vit model use the default pretrain and resize to match the input shape!
2024-11-14:17:36:55 [INFO    ] [save_load_attack.py:285] change key name from 1.encoder.layers.encoder_layer_0.mlp.0.weight to 1.encoder.layers.encoder_layer_0.mlp.linear_1.weight
2024-11-14:17:36:55 [INFO    ] [save_load_attack.py:285] change key name from 1.encoder.layers.encoder_layer_0.mlp.0.bias to 1.encoder.layers.encoder_layer_0.mlp.linear_1.bias
2024-11-14:17:36:55 [INFO    ] [save_load_attack.py:285] change key name from 1.encoder.layers.encoder_layer_0.mlp.3.weight to 1.encoder.layers.encoder_layer_0.mlp.linear_2.weight
2024-11-14:17:36:55 [INFO    ] [save_load_attack.py:285] change key name from 1.encoder.layers.encoder_layer_0.mlp.3.bias to 1.encoder.layers.encoder_layer_0.mlp.linear_2.bias
2024-11-14:17:36:55 [INFO    ] [save_load_attack.py:285] change key name from 1.encoder.layers.encoder_layer_1.mlp.0.weight to 1.encoder.layers.encoder_layer_1.mlp.linear_1.weight
2024-11-14:17:36:55 [INFO    ] [save_load_attack.py:285] change key name from 1.encoder.layers.encoder_layer_1.mlp.0.bias to 1.encoder.layers.encoder_layer_1.mlp.linear_1.bias
2024-11-14:17:36:55 [INFO    ] [save_load_attack.py:285] change key name from 1.encoder.layers.encoder_layer_1.mlp.3.weight to 1.encoder.layers.encoder_layer_1.mlp.linear_2.weight
2024-11-14:17:36:55 [INFO    ] [save_load_attack.py:285] change key name from 1.encoder.layers.encoder_layer_1.mlp.3.bias to 1.encoder.layers.encoder_layer_1.mlp.linear_2.bias
2024-11-14:17:36:55 [INFO    ] [save_load_attack.py:285] change key name from 1.encoder.layers.encoder_layer_2.mlp.0.weight to 1.encoder.layers.encoder_layer_2.mlp.linear_1.weight
2024-11-14:17:36:55 [INFO    ] [save_load_attack.py:285] change key name from 1.encoder.layers.encoder_layer_2.mlp.0.bias to 1.encoder.layers.encoder_layer_2.mlp.linear_1.bias
2024-11-14:17:36:55 [INFO    ] [save_load_attack.py:285] change key name from 1.encoder.layers.encoder_layer_2.mlp.3.weight to 1.encoder.layers.encoder_layer_2.mlp.linear_2.weight
2024-11-14:17:36:55 [INFO    ] [save_load_attack.py:285] change key name from 1.encoder.layers.encoder_layer_2.mlp.3.bias to 1.encoder.layers.encoder_layer_2.mlp.linear_2.bias
2024-11-14:17:36:55 [INFO    ] [save_load_attack.py:285] change key name from 1.encoder.layers.encoder_layer_3.mlp.0.weight to 1.encoder.layers.encoder_layer_3.mlp.linear_1.weight
2024-11-14:17:36:55 [INFO    ] [save_load_attack.py:285] change key name from 1.encoder.layers.encoder_layer_3.mlp.0.bias to 1.encoder.layers.encoder_layer_3.mlp.linear_1.bias
2024-11-14:17:36:55 [INFO    ] [save_load_attack.py:285] change key name from 1.encoder.layers.encoder_layer_3.mlp.3.weight to 1.encoder.layers.encoder_layer_3.mlp.linear_2.weight
2024-11-14:17:36:55 [INFO    ] [save_load_attack.py:285] change key name from 1.encoder.layers.encoder_layer_3.mlp.3.bias to 1.encoder.layers.encoder_layer_3.mlp.linear_2.bias
2024-11-14:17:36:55 [INFO    ] [save_load_attack.py:285] change key name from 1.encoder.layers.encoder_layer_4.mlp.0.weight to 1.encoder.layers.encoder_layer_4.mlp.linear_1.weight
2024-11-14:17:36:55 [INFO    ] [save_load_attack.py:285] change key name from 1.encoder.layers.encoder_layer_4.mlp.0.bias to 1.encoder.layers.encoder_layer_4.mlp.linear_1.bias
2024-11-14:17:36:55 [INFO    ] [save_load_attack.py:285] change key name from 1.encoder.layers.encoder_layer_4.mlp.3.weight to 1.encoder.layers.encoder_layer_4.mlp.linear_2.weight
2024-11-14:17:36:55 [INFO    ] [save_load_attack.py:285] change key name from 1.encoder.layers.encoder_layer_4.mlp.3.bias to 1.encoder.layers.encoder_layer_4.mlp.linear_2.bias
2024-11-14:17:36:55 [INFO    ] [save_load_attack.py:285] change key name from 1.encoder.layers.encoder_layer_5.mlp.0.weight to 1.encoder.layers.encoder_layer_5.mlp.linear_1.weight
2024-11-14:17:36:55 [INFO    ] [save_load_attack.py:285] change key name from 1.encoder.layers.encoder_layer_5.mlp.0.bias to 1.encoder.layers.encoder_layer_5.mlp.linear_1.bias
2024-11-14:17:36:55 [INFO    ] [save_load_attack.py:285] change key name from 1.encoder.layers.encoder_layer_5.mlp.3.weight to 1.encoder.layers.encoder_layer_5.mlp.linear_2.weight
2024-11-14:17:36:55 [INFO    ] [save_load_attack.py:285] change key name from 1.encoder.layers.encoder_layer_5.mlp.3.bias to 1.encoder.layers.encoder_layer_5.mlp.linear_2.bias
2024-11-14:17:36:55 [INFO    ] [save_load_attack.py:285] change key name from 1.encoder.layers.encoder_layer_6.mlp.0.weight to 1.encoder.layers.encoder_layer_6.mlp.linear_1.weight
2024-11-14:17:36:55 [INFO    ] [save_load_attack.py:285] change key name from 1.encoder.layers.encoder_layer_6.mlp.0.bias to 1.encoder.layers.encoder_layer_6.mlp.linear_1.bias
2024-11-14:17:36:55 [INFO    ] [save_load_attack.py:285] change key name from 1.encoder.layers.encoder_layer_6.mlp.3.weight to 1.encoder.layers.encoder_layer_6.mlp.linear_2.weight
2024-11-14:17:36:55 [INFO    ] [save_load_attack.py:285] change key name from 1.encoder.layers.encoder_layer_6.mlp.3.bias to 1.encoder.layers.encoder_layer_6.mlp.linear_2.bias
2024-11-14:17:36:55 [INFO    ] [save_load_attack.py:285] change key name from 1.encoder.layers.encoder_layer_7.mlp.0.weight to 1.encoder.layers.encoder_layer_7.mlp.linear_1.weight
2024-11-14:17:36:55 [INFO    ] [save_load_attack.py:285] change key name from 1.encoder.layers.encoder_layer_7.mlp.0.bias to 1.encoder.layers.encoder_layer_7.mlp.linear_1.bias
2024-11-14:17:36:55 [INFO    ] [save_load_attack.py:285] change key name from 1.encoder.layers.encoder_layer_7.mlp.3.weight to 1.encoder.layers.encoder_layer_7.mlp.linear_2.weight
2024-11-14:17:36:55 [INFO    ] [save_load_attack.py:285] change key name from 1.encoder.layers.encoder_layer_7.mlp.3.bias to 1.encoder.layers.encoder_layer_7.mlp.linear_2.bias
2024-11-14:17:36:55 [INFO    ] [save_load_attack.py:285] change key name from 1.encoder.layers.encoder_layer_8.mlp.0.weight to 1.encoder.layers.encoder_layer_8.mlp.linear_1.weight
2024-11-14:17:36:55 [INFO    ] [save_load_attack.py:285] change key name from 1.encoder.layers.encoder_layer_8.mlp.0.bias to 1.encoder.layers.encoder_layer_8.mlp.linear_1.bias
2024-11-14:17:36:55 [INFO    ] [save_load_attack.py:285] change key name from 1.encoder.layers.encoder_layer_8.mlp.3.weight to 1.encoder.layers.encoder_layer_8.mlp.linear_2.weight
2024-11-14:17:36:55 [INFO    ] [save_load_attack.py:285] change key name from 1.encoder.layers.encoder_layer_8.mlp.3.bias to 1.encoder.layers.encoder_layer_8.mlp.linear_2.bias
2024-11-14:17:36:55 [INFO    ] [save_load_attack.py:285] change key name from 1.encoder.layers.encoder_layer_9.mlp.0.weight to 1.encoder.layers.encoder_layer_9.mlp.linear_1.weight
2024-11-14:17:36:55 [INFO    ] [save_load_attack.py:285] change key name from 1.encoder.layers.encoder_layer_9.mlp.0.bias to 1.encoder.layers.encoder_layer_9.mlp.linear_1.bias
2024-11-14:17:36:55 [INFO    ] [save_load_attack.py:285] change key name from 1.encoder.layers.encoder_layer_9.mlp.3.weight to 1.encoder.layers.encoder_layer_9.mlp.linear_2.weight
2024-11-14:17:36:55 [INFO    ] [save_load_attack.py:285] change key name from 1.encoder.layers.encoder_layer_9.mlp.3.bias to 1.encoder.layers.encoder_layer_9.mlp.linear_2.bias
2024-11-14:17:36:55 [INFO    ] [save_load_attack.py:285] change key name from 1.encoder.layers.encoder_layer_10.mlp.0.weight to 1.encoder.layers.encoder_layer_10.mlp.linear_1.weight
2024-11-14:17:36:55 [INFO    ] [save_load_attack.py:285] change key name from 1.encoder.layers.encoder_layer_10.mlp.0.bias to 1.encoder.layers.encoder_layer_10.mlp.linear_1.bias
2024-11-14:17:36:55 [INFO    ] [save_load_attack.py:285] change key name from 1.encoder.layers.encoder_layer_10.mlp.3.weight to 1.encoder.layers.encoder_layer_10.mlp.linear_2.weight
2024-11-14:17:36:55 [INFO    ] [save_load_attack.py:285] change key name from 1.encoder.layers.encoder_layer_10.mlp.3.bias to 1.encoder.layers.encoder_layer_10.mlp.linear_2.bias
2024-11-14:17:36:55 [INFO    ] [save_load_attack.py:285] change key name from 1.encoder.layers.encoder_layer_11.mlp.0.weight to 1.encoder.layers.encoder_layer_11.mlp.linear_1.weight
2024-11-14:17:36:55 [INFO    ] [save_load_attack.py:285] change key name from 1.encoder.layers.encoder_layer_11.mlp.0.bias to 1.encoder.layers.encoder_layer_11.mlp.linear_1.bias
2024-11-14:17:36:55 [INFO    ] [save_load_attack.py:285] change key name from 1.encoder.layers.encoder_layer_11.mlp.3.weight to 1.encoder.layers.encoder_layer_11.mlp.linear_2.weight
2024-11-14:17:36:55 [INFO    ] [save_load_attack.py:285] change key name from 1.encoder.layers.encoder_layer_11.mlp.3.bias to 1.encoder.layers.encoder_layer_11.mlp.linear_2.bias
2024-11-14:17:36:55 [DEBUG   ] [model_trainer_generate.py:59] image_size ONLY apply for vit!!!
If you use vit make sure you set the image size!
2024-11-14:17:36:55 [DEBUG   ] [model_trainer_generate.py:122] All vit model use the default pretrain and resize to match the input shape!
2024-11-14:17:36:59 [INFO    ] [bd_dataset_v2.py:133] save file format is .png
2024-11-14:17:36:59 [INFO    ] [fp.py:247] get ran_idx for subset clean train dataset, (len=2500), ran_idx:[8805, 37303, 4135, 16716, 7727, 32468, 49870, 29457, 30949, 42702, 24878, 13759, 6151, 31972, 1857, 25546, 28361, 39809, 49956, 138, 45602, 29188, 17454, 47286, 14992, 38741, 6699, 20803, 2004, 1462, 1667, 42568, 35482, 603, 24982, 44989, 14195, 27663, 47569, 1903, 34578, 14528, 28697, 32493, 36232, 15275, 22655, 15130, 44357, 14338, 49869, 30120, 18991, 1408, 27274, 36467, 42093, 6553, 12183, 41245, 47424, 19424, 7922, 48702, 21803, 47283, 46608, 32820, 33273, 43929, 12441, 19881, 18622, 38507, 32726, 33114, 25778, 38600, 2262, 31472, 15908, 48741, 26495, 27152, 43564, 11338, 24059, 35966, 46074, 44203, 48379, 24556, 5666, 28767, 43500, 33320, 7073, 10728, 34140, 25772, 24282, 32092, 48022, 1938, 30757, 2849, 20219, 46096, 40292, 38874, 37891, 25794, 42412, 11164, 11048, 32914, 14872, 806, 13075, 35364, 35935, 15215, 26506, 33670, 22532, 37866, 23152, 30089, 17647, 43202, 35913, 39907, 47801, 374, 25145, 48529, 33587, 8470, 33992, 36789, 13466, 27924, 3678, 31529, 23903, 37355, 36333, 13096, 33077, 27092, 31780, 23382, 27159, 22680, 103, 35289, 35396, 40861, 40137, 21701, 30025, 39312, 1833, 15047, 41639, 11613, 36094, 38303, 11847, 6003, 36112, 16730, 2127, 44113, 4617, 5454, 1093, 29687, 954, 49423, 49518, 18428, 16355, 17605, 7175, 40947, 12098, 22572, 19024, 4555, 10975, 10461, 16725, 34562, 11019, 43034, 17885, 42480, 46634, 19299, 29799, 46047, 21102, 32538, 31049, 7483, 1548, 20447, 25333, 22501, 27585, 12323, 16935, 7127, 16610, 47851, 33430, 13702, 39691, 28288, 1364, 14770, 1170, 26038, 9598, 2315, 47109, 10500, 29207, 46177, 33181, 44444, 27961, 35697, 14457, 41338, 45550, 33855, 29546, 14627, 34334, 42500, 2011, 25880, 44230, 37738, 21053, 43242, 41349, 27937, 3852, 48329, 19569, 8236, 13902, 3109, 20079, 4635, 5009, 20339, 19521, 48748, 10368, 37023, 16538, 8545, 555, 36747, 2484, 38704, 14260, 37373, 30202, 11240, 46138, 40826, 33349, 2452, 24770, 13133, 22736, 6489, 13484, 37577, 44181, 28373, 38758, 12721, 32266, 6843, 43644, 25563, 19403, 33037, 32754, 1127, 21321, 40116, 26366, 18438, 1185, 10286, 13163, 21478, 36919, 8856, 22222, 28130, 13961, 17467, 44201, 6318, 24853, 35889, 22534, 45030, 35017, 31752, 34899, 15377, 4280, 47544, 2647, 5549, 8717, 11121, 10915, 35272, 13957, 17564, 49749, 21773, 39335, 33153, 24124, 22206, 22300, 7465, 19085, 15413, 39582, 46865, 32033, 8870, 38008, 36121, 6833, 21019, 2564, 26646, 4796, 24918, 9655, 8193, 22341, 7516, 40316, 38496, 24775, 5023, 37406, 36062, 14661, 37091, 5357, 17480, 23913, 19369, 36991, 35015, 7491, 30000, 18165, 7060, 2998, 19381, 811, 40217, 43936, 953, 6008, 27101, 7543, 2622, 12315, 15704, 38456, 27591, 10618, 7573, 29550, 10969, 44622, 15821, 10416, 48759, 6739, 28514, 24790, 35581, 19269, 36058, 16607, 46636, 31261, 20608, 6562, 13606, 42732, 20802, 2596, 1786, 688, 47610, 39096, 20987, 29481, 25642, 20531, 26119, 4126, 4206, 20797, 39416, 29875, 7298, 16388, 14102, 40488, 35580, 45101, 30731, 43373, 23319, 16979, 12007, 35494, 13620, 20140, 13055, 16146, 23623, 5332, 18401, 5859, 49367, 29353, 5930, 42730, 37641, 42170, 22209, 14904, 25590, 20105, 2690, 21446, 12242, 20757, 37945, 19844, 16111, 21910, 6615, 35666, 40068, 37944, 39057, 6032, 16062, 14428, 1335, 15975, 26330, 4740, 17567, 36123, 4647, 47786, 4923, 1409, 41640, 649, 19059, 49199, 23539, 32326, 30725, 10104, 6614, 32861, 21501, 5053, 33375, 43597, 11353, 11768, 9801, 9275, 20957, 20029, 7004, 46486, 33708, 39445, 19234, 8277, 13548, 9285, 35749, 47358, 2081, 20713, 40863, 44053, 36238, 48901, 45193, 13463, 11675, 19590, 28353, 35225, 10347, 3182, 46846, 43763, 16206, 16553, 4221, 44700, 29274, 28191, 35996, 16398, 35479, 28796, 35262, 29708, 712, 25933, 22195, 16906, 31836, 1599, 42365, 27307, 37395, 1239, 4084, 45331, 23261, 38015, 9062, 38898, 8200, 9076, 16981, 18147, 26070, 36967, 26285, 11283, 5848, 15304, 31850, 490, 11637, 34648, 20790, 32826, 42522, 28725, 44991, 41884, 47934, 14793, 15622, 20511, 32445, 45019, 31380, 14749, 46717, 27016, 22082, 36726, 40061, 47724, 42821, 18037, 42363, 14383, 3158, 4689, 33534, 42289, 24162, 10450, 33530, 13359, 20434, 19576, 45387, 19632, 36196, 24354, 10825, 45959, 45958, 48261, 30459, 38966, 5568, 8076, 39721, 33682, 37436, 24720, 11552, 10209, 16423, 27967, 14261, 37323, 47159, 49659, 3416, 32442, 44671, 25795, 46999, 41744, 22805, 25164, 33754, 10800, 47834, 2667, 34352, 5924, 16723, 41186, 6622, 17532, 48293, 5486, 9117, 40429, 43235, 44998, 45901, 5374, 29167, 15793, 25057, 28371, 26033, 10797, 21329, 28713, 8279, 40789, 31979, 13894, 7811, 28263, 39366, 34999, 26753, 7739, 43287, 19364, 18197, 16267, 24828, 49124, 36659, 262, 34626, 28755, 37950, 1378, 2019, 41125, 39690, 15875, 17065, 13540, 11328, 18663, 9726, 35542, 13136, 17906, 20390, 38386, 49638, 16441, 44795, 29255, 11008, 35741, 23393, 32165, 27522, 7982, 13693, 37391, 25117, 13423, 18615, 7087, 1582, 7737, 37310, 48972, 866, 35735, 19425, 44165, 49877, 47468, 42558, 8951, 4927, 32792, 24492, 37524, 20398, 28650, 32966, 44385, 23384, 49716, 34628, 21213, 55, 8119, 28987, 47052, 29461, 22951, 19975, 35343, 26175, 22240, 47915, 44788, 37448, 32263, 7411, 42445, 24743, 25060, 13363, 36496, 253, 18194, 41650, 39201, 47335, 48402, 47735, 33486, 13033, 30250, 39376, 33876, 26801, 48800, 46670, 20010, 46064, 11161, 29451, 40634, 43833, 34796, 12934, 23555, 34484, 230, 44469, 25504, 37968, 27909, 26558, 22020, 40738, 38301, 48092, 45842, 49071, 4439, 32289, 48874, 16228, 41966, 42516, 19063, 41266, 1361, 26673, 47270, 41239, 10229, 41532, 17711, 4811, 39679, 663, 22901, 17339, 46400, 26944, 44894, 35667, 19901, 9966, 30282, 16996, 31755, 11116, 30612, 33444, 2974, 17748, 33441, 6463, 48807, 38707, 27695, 4571, 23276, 4390, 43046, 28998, 1293, 10756, 33237, 46546, 10592, 45249, 6098, 26340, 41679, 45148, 18074, 39648, 19949, 13689, 34609, 13612, 15547, 21885, 17633, 4492, 4907, 45822, 34288, 43174, 24130, 30666, 33522, 36546, 48282, 3259, 11046, 19456, 42799, 48174, 46755, 36453, 17679, 23321, 39955, 48486, 15211, 25726, 36768, 26195, 11295, 31694, 17008, 40003, 21603, 46927, 14569, 16958, 39973, 46313, 16005, 43308, 2001, 40793, 26384, 20744, 28296, 49911, 16280, 17635, 12445, 4753, 41018, 47993, 10854, 37954, 29070, 38104, 47726, 9711, 39731, 17169, 30106, 34510, 10651, 9084, 9050, 46907, 28880, 23664, 20300, 49242, 26263, 15760, 7591, 47065, 13512, 47086, 44656, 20020, 4471, 6972, 14917, 26018, 21061, 32267, 6551, 12239, 2947, 3626, 39158, 1525, 49311, 14192, 44780, 2274, 32404, 46132, 34638, 47445, 40185, 28985, 22442, 43445, 17994, 40189, 45392, 11317, 6241, 14553, 15284, 32441, 29479, 24765, 49192, 11049, 15185, 15449, 18588, 30315, 35849, 38006, 25532, 13887, 29602, 46853, 16900, 21634, 32527, 38903, 7270, 14014, 5167, 3028, 1010, 342, 31483, 20943, 25109, 38027, 18822, 12837, 26209, 10490, 49713, 42339, 9979, 1996, 994, 25380, 9514, 43569, 35558, 3743, 37011, 24870, 16657, 8518, 5211, 30335, 42739, 19883, 946, 2324, 35191, 3987, 34400, 8449, 2805, 17930, 7696, 28344, 5966, 12459, 1810, 32745, 41780, 8540, 48799, 18302, 45008, 12578, 43451, 29328, 25539, 21614, 41357, 17561, 17029, 42048, 41655, 15931, 16084, 3944, 38530, 38698, 11486, 22912, 28080, 39672, 45747, 36717, 41836, 34221, 3984, 23149, 35843, 27043, 35264, 13065, 46638, 35153, 27795, 43410, 4593, 46762, 17504, 48711, 40020, 47259, 49296, 4737, 16487, 6328, 9896, 3847, 13326, 28056, 2942, 3461, 41754, 5978, 33609, 30747, 32841, 24264, 6506, 20492, 2629, 8298, 34830, 2174, 29055, 43532, 8401, 25899, 46376, 29234, 1613, 48275, 34374, 17694, 5922, 16384, 21326, 5622, 19781, 2240, 25181, 3811, 48012, 17105, 20526, 48183, 8520, 17059, 24915, 7676, 44419, 19906, 6164, 27841, 16081, 32947, 36515, 13461, 21633, 22194, 33378, 25630, 38282, 31532, 6860, 8501, 42767, 29400, 34324, 36611, 47145, 38100, 34083, 35102, 1983, 19092, 48704, 10291, 13105, 24271, 25509, 34149, 21248, 6381, 26837, 22634, 8281, 37677, 4250, 2855, 19693, 42671, 34975, 20555, 27367, 19550, 20892, 23109, 17869, 21318, 49069, 49054, 34085, 32837, 564, 34480, 7986, 9748, 20782, 47631, 21336, 21467, 37559, 4511, 29610, 18324, 31437, 29762, 23865, 48603, 24938, 5122, 37943, 3676, 8819, 3193, 34321, 32255, 37722, 16509, 16080, 46066, 37603, 48932, 22193, 23696, 42172, 24257, 26383, 20144, 30446, 39207, 22311, 34873, 33262, 10996, 1905, 9722, 16392, 45039, 14492, 36882, 8742, 7389, 12097, 26942, 47707, 40612, 3283, 6502, 35763, 44650, 17414, 46835, 7008, 13391, 17150, 4376, 41427, 37435, 34496, 42010, 5144, 4771, 14246, 42155, 11361, 33520, 28317, 1431, 38689, 31894, 46548, 18595, 14413, 13132, 39195, 32349, 15415, 27881, 29634, 44276, 24062, 35682, 12374, 31598, 47567, 4764, 16813, 26693, 13196, 542, 48941, 34864, 24950, 33704, 31921, 5007, 26459, 40359, 33427, 37898, 38312, 27891, 23057, 30045, 419, 12436, 19618, 45612, 45307, 42079, 360, 35440, 7867, 19834, 33586, 48946, 20680, 35587, 42273, 37484, 36135, 18514, 34447, 26963, 35523, 33938, 26758, 39503, 41285, 38080, 20169, 29656, 19785, 8581, 33182, 29109, 38421, 9196, 36044, 10680, 16563, 41724, 629, 27798, 48243, 43355, 37087, 2375, 24141, 27582, 26354, 18451, 43187, 49218, 43887, 1201, 5929, 5900, 315, 25127, 17621, 30432, 17823, 24420, 41670, 49110, 31550, 22055, 25458, 29894, 7635, 31701, 23232, 9482, 27210, 9716, 1190, 11277, 17054, 24101, 8330, 38638, 18818, 27060, 16903, 33671, 18826, 48465, 27574, 45306, 17935, 28410, 22013, 31837, 14120, 46888, 32202, 26339, 46935, 27860, 5988, 4223, 8484, 13509, 9804, 15022, 47852, 1712, 6767, 16595, 10204, 31443, 6484, 26157, 42576, 47415, 12283, 196, 5843, 28028, 40100, 3333, 36018, 14305, 35028, 27648, 22721, 3082, 6761, 48137, 36230, 44503, 27500, 44017, 48570, 7775, 17388, 44862, 18268, 11733, 31438, 46148, 3124, 14039, 44355, 42222, 5714, 25540, 8112, 43824, 29313, 19283, 44692, 33280, 32634, 25761, 7612, 39722, 31404, 6935, 9773, 25320, 40215, 46031, 13185, 10952, 34127, 16882, 27302, 35174, 18913, 32274, 41527, 35703, 14065, 49785, 40865, 22091, 31848, 6740, 561, 49661, 47794, 43075, 22733, 46451, 17533, 3698, 35424, 40989, 28852, 19651, 49797, 6603, 14978, 33293, 17993, 17716, 46285, 16144, 26977, 9721, 8532, 16797, 12799, 26720, 36755, 41289, 39222, 3829, 34916, 39910, 33381, 9755, 27118, 17705, 18336, 31466, 45575, 20040, 17501, 32199, 14050, 32686, 24096, 39256, 30837, 15837, 22177, 11544, 39697, 49736, 11875, 48444, 38046, 45493, 29564, 35046, 9793, 33026, 21365, 34634, 45226, 8851, 42274, 49899, 13971, 20667, 40799, 32357, 21629, 7759, 8383, 9182, 45766, 16807, 14747, 5769, 41632, 35312, 3278, 36901, 44876, 7611, 14827, 36913, 13068, 32965, 37196, 43247, 20176, 27673, 21472, 277, 1314, 20008, 40329, 14435, 5542, 48696, 14713, 18361, 44609, 41002, 22352, 17634, 39396, 47105, 33975, 24856, 1515, 7972, 21616, 22742, 9138, 7431, 16437, 9389, 44643, 37618, 2688, 22741, 5070, 6017, 47508, 6763, 19659, 20776, 16315, 17651, 34709, 3261, 23708, 2042, 5132, 9111, 26170, 24383, 47189, 45305, 15863, 44541, 21549, 17932, 521, 33766, 21091, 7353, 23092, 42021, 47458, 8250, 39725, 17765, 26552, 5968, 44499, 37790, 40674, 47538, 34585, 31167, 27441, 35111, 25806, 19732, 14378, 41466, 19835, 35987, 8724, 3534, 39327, 33326, 7200, 11478, 15766, 14091, 28482, 17989, 35779, 1309, 16411, 17755, 34743, 17153, 31013, 8262, 26429, 46456, 6799, 48818, 24476, 4526, 42888, 35664, 23798, 35700, 36404, 47393, 33250, 44865, 38064, 1993, 40569, 20193, 29195, 44722, 8664, 10208, 4872, 37963, 9301, 44342, 14173, 31724, 21985, 23926, 19159, 10470, 10197, 25017, 28817, 26584, 7724, 39387, 9512, 17678, 19352, 43704, 45020, 41869, 39563, 536, 35211, 635, 42135, 8688, 24871, 48954, 36825, 6628, 30115, 1990, 28308, 39227, 44515, 27674, 18092, 26766, 26616, 39700, 30276, 3491, 6500, 30851, 2451, 42341, 46146, 45702, 38, 2756, 7282, 38495, 9147, 34763, 33297, 23349, 17753, 37239, 42917, 23358, 31058, 45709, 16067, 40749, 15716, 6916, 36854, 23443, 10397, 7628, 2659, 46140, 20558, 27682, 47662, 22692, 16612, 43093, 41010, 3648, 40432, 28499, 27193, 24661, 23510, 19263, 49408, 22363, 28902, 45825, 15601, 41610, 39953, 34012, 9461, 3672, 22380, 44108, 7438, 33622, 11285, 35588, 42122, 41019, 31944, 22346, 49641, 46558, 7961, 38193, 1419, 31474, 13711, 25115, 41392, 11449, 46962, 14929, 6533, 16276, 21994, 21564, 43031, 44354, 30232, 48692, 30878, 24218, 32284, 42692, 43462, 47398, 12698, 28310, 28875, 26139, 35522, 7891, 37449, 31999, 17462, 8206, 9822, 782, 24649, 27172, 7141, 1718, 42755, 4888, 11990, 30067, 24708, 43727, 32901, 18907, 10191, 10111, 34380, 6929, 16684, 1231, 30436, 25988, 41536, 46182, 48239, 14966, 35240, 45580, 25610, 348, 35659, 16349, 27719, 10413, 43402, 11734, 22444, 43411, 15672, 4984, 35150, 36559, 10547, 11508, 24620, 38361, 1413, 33627, 14212, 28011, 15444, 2651, 33794, 47489, 12467, 45895, 33032, 45260, 40099, 42831, 35176, 5060, 16247, 26094, 30470, 7804, 37159, 42197, 3168, 25361, 5877, 36697, 6199, 42037, 31386, 33978, 15675, 797, 1366, 30567, 18223, 47378, 27234, 10924, 38991, 8729, 36809, 46368, 20861, 35041, 41713, 29405, 32872, 27368, 36295, 10985, 45801, 25918, 45779, 25499, 13154, 32466, 18247, 23592, 9927, 17003, 37150, 18316, 11479, 47248, 40766, 5482, 47909, 23627, 22027, 9352, 16938, 16712, 16533, 22895, 25183, 18293, 37058, 30655, 882, 9766, 8536, 16562, 14805, 12878, 35229, 40529, 13003, 35586, 28129, 46930, 15717, 37854, 9122, 36301, 30179, 25645, 46630, 12834, 5411, 40986, 5056, 10032, 43731, 3769, 48912, 26567, 25075, 27345, 9008, 38732, 39118, 8465, 44085, 35291, 35805, 4860, 15808, 25013, 9137, 18721, 13265, 43369, 47114, 26029, 23387, 49090, 11685, 14752, 19519, 9424, 22788, 32251, 35085, 19121, 5805, 19591, 13686, 46227, 30372, 1435, 40768, 38836, 6752, 49463, 29071, 16704, 40524, 3817, 3412, 20683, 10479, 8674, 41234, 6769, 7373, 28527, 41512, 38436, 16115, 48802, 13623, 33045, 33274, 26006, 7966, 46390, 13905, 25154, 43309, 33911, 8778, 46940, 37902, 16685, 47518, 238, 47035, 13208, 36877, 43453, 31590, 35716, 40211, 15117, 17541, 2471, 41840, 10995, 44012, 43948, 36331, 32955, 15277, 26898, 17936, 43360, 27603, 17824, 32373, 6404, 43862, 8493, 12232, 36668, 1040, 29748, 49400, 2939, 32011, 14046, 25817, 47849, 35301, 22036, 15956, 6162, 44441, 48896, 2795, 27699, 28952, 12372, 11352, 39014, 32899, 12451, 33406, 25218, 34198, 23628, 12915, 15251, 23575, 43164, 38407, 49620, 4227, 22350, 3394, 2896, 40016, 11585, 9678, 18712, 30746, 2821, 38228, 32836, 4251, 37056, 25971, 6028, 26210, 33536, 37515, 42343, 19745, 25846, 17558, 23081, 30843, 3216, 36188, 31270, 1142, 27972, 19962, 38579, 49082, 20795, 9790, 39067, 38622, 36421, 18204, 4316, 39790, 23657, 27205, 25625, 34067, 37725, 38124, 2420, 37605, 34704, 942, 21760, 22065, 24139, 49170, 36102, 2258, 41776, 24258, 38189, 41573, 5489, 35362, 29242, 21920, 32773, 35657, 223, 10532, 21301, 23648, 14020, 9577, 38024, 9713, 38639, 7070, 26475, 20788, 33334, 27581, 23595, 22375, 17024, 39900, 24149, 2464, 46592, 4159, 41335, 16164, 17400, 49453, 26020, 36070, 18602, 37602, 40542, 5470, 4909, 46439, 11166, 17517, 5458, 8275, 18509, 36099, 47588, 42015, 17223, 15391, 13800, 6476, 18161, 47297, 31484, 3087, 48336, 33564, 19747, 35629, 36091, 20673, 22260, 19401, 33827, 8732, 2310, 28981, 23851, 48986, 2443, 1881, 20675, 27361, 49137, 10735, 36503, 2662, 46325, 38558, 46010, 43490, 41250, 34463, 27825, 12082, 12938, 15259, 7521, 38498, 8522, 38451, 33176, 8024, 47287, 17471, 30037, 12864, 3623, 23678, 29892, 21949, 40271, 47397, 23244, 14402, 41641, 612, 914, 32030, 2114, 10773, 16601, 36173, 2612, 601, 15079, 5547, 34360, 11358, 2300, 34613, 13123, 13725, 29031, 18924, 15926, 32144, 33154, 24338, 21292, 25688, 42823, 4815, 12795, 38949, 11894, 12289, 44852, 40832, 19461, 38093, 27934, 31065, 23820, 1518, 31938, 1353, 6866, 43198, 41001, 37877, 43551, 40617, 28342, 46377, 38154, 22518, 4853, 42397, 27537, 12798, 45981, 33700, 32396, 39842, 36937, 43282, 36068, 32839, 31300, 39319, 44596, 48390, 37729, 29496, 39565, 10838, 17581, 44278, 34370, 19760, 36926, 25980, 39805, 35370, 16983, 16736, 20332, 961, 39623, 49635, 3004, 29987, 29985, 23300, 15213, 33291, 29108, 13706, 31195, 21993, 45630, 41014, 9491, 25158, 28662, 3555, 42070, 7289, 23351, 16764, 49244, 35461, 48630, 3540, 20082, 24820, 980, 21264, 22161, 20239, 38612, 13668, 5356, 21537, 7856, 44006, 42299, 4343, 8412, 45269, 19286, 26847, 39808, 22333, 15241, 1783, 42208, 45911, 45196, 11992, 49514, 49595, 33041, 49141, 37620, 41993, 23972, 19825, 19251, 24773, 27553, 34498, 30241, 4863, 13040, 26719, 15178, 39836, 2767, 40470, 15778, 41271, 14716, 15957, 46737, 25865, 24861, 13772, 40755, 9960, 47191, 19611, 48746, 23599, 95, 46705, 46168, 45051, 20136, 29115, 32631, 11198, 44253, 9593, 2043, 24298, 28638, 36300, 22406, 33633, 20813, 39568, 7308, 38247, 42324, 19155, 35917, 43428, 18095, 28149, 740, 20363, 49299, 5664, 41858, 32236, 7534, 32843, 14455, 49014, 42161, 49111, 17345, 28624, 24427, 15109, 3552, 6716, 39119, 33697, 33510, 10686, 19140, 3167, 4476, 14302, 207, 44068, 4049, 27717, 47954, 46911, 4336, 3605, 587, 2285, 35254, 22225, 21804]
2024-11-14:17:36:59 [INFO    ] [fp.py:303] Forwarding all the training dataset:
2024-11-14:17:37:02 [INFO    ] [fp.py:316] get seq_sort, (len=768), seq_sort:tensor([700, 277, 122, 673,  62, 133, 713,  99,  70, 179, 696, 334, 273, 294,
        315,  66, 402,  59,  10,  45, 158, 342, 452,  41, 754, 479, 560, 210,
        187, 134, 333,  52, 163, 150, 597, 148, 101, 604, 613, 513, 701, 521,
        667, 189, 730, 306, 362, 429, 646, 261, 386, 314, 246, 280, 763, 722,
        600, 614, 587, 248, 471, 105, 438, 211, 751, 432, 437, 272, 263, 592,
        114, 160, 648, 530, 474, 627, 174, 682, 288, 494, 389, 485, 207, 283,
         49,  92, 136, 573, 498, 541, 491, 358, 522,   3, 574, 382, 383, 304,
        267,  44, 183, 348, 741, 152, 737, 584, 370, 194, 118, 598, 596,  20,
        364, 551, 421, 487, 295, 299, 481, 396, 324,  43, 335, 193, 766, 500,
        702, 652, 130, 621, 724, 305, 369, 113, 137, 167, 603, 307, 612, 276,
        750, 555,  84, 497, 662, 526, 723, 287, 157, 502, 728, 159, 217,  57,
        496,  38,  12, 605, 198, 311, 109, 637,  75, 694, 518, 381, 175, 385,
         81, 408, 680, 244,   9, 622, 254,  55, 588, 461,  63, 355, 563,  68,
        468, 704,  95, 653, 492, 674,   5, 440, 557, 486,  60, 537, 683, 303,
        618, 412, 366, 106, 641, 284, 559, 633, 349,  19, 693,  89, 107, 332,
          4,  50, 397, 545, 553, 426,  69, 376, 580, 593, 677, 455, 415, 173,
         37, 281, 510, 733, 112, 422, 634,  82, 469, 577, 738, 209, 351, 327,
         34, 117, 615, 504, 180, 482, 224, 162, 330, 203, 220,  15, 326, 511,
        120, 367, 516, 410, 265, 611, 547,  64, 506, 657, 490, 635,  53,  26,
        623, 512, 739,  56, 651,   8,  72, 400, 285,   0, 353, 225, 215, 151,
        731, 251,  67, 548,  31, 608, 213, 725, 467, 166, 631, 431, 309, 706,
        515, 344,  98, 297, 420, 318, 222,  23, 365, 554,  32, 687,  42, 753,
        705, 589, 464, 734, 102, 761, 264, 145, 341, 290, 131, 379, 752,  83,
        610, 532, 517, 527, 316,  30, 100,  16, 375, 239,  22, 714, 199, 629,
        654, 698, 427, 493, 181, 252, 458, 195, 232,  48, 534, 104, 176, 119,
        126, 116, 708, 607, 454, 758, 463, 354, 155, 628, 505, 561, 141, 359,
        390, 711, 115, 168, 200, 178,  97, 182, 185, 710, 661, 565, 363, 310,
        230, 636,  18, 356, 507, 372, 539, 572, 748, 546, 668, 755, 269, 405,
        480, 670, 448, 756, 582, 720, 403, 630, 529, 275, 660, 591, 765, 466,
        146, 658, 746, 465, 313,  11,  88, 514, 453,   6, 721, 240, 337, 238,
        441, 732,  17, 384, 128, 606,  78, 380, 585, 433, 270, 616, 576, 231,
         13, 586,  36, 609, 439, 624, 544, 450, 519, 338, 445, 581,  85, 672,
        659, 339, 391, 296, 665, 202, 735, 562,  27, 503, 443, 642, 476,  96,
        684, 322,  74, 632, 566, 371, 745, 218, 320, 169,  73,  39, 446, 343,
        726, 184, 501, 323, 374, 191, 266, 759, 749,   1, 378,  80, 435, 312,
        716, 414,  65,  71, 760, 345, 156, 278, 360, 678, 655, 401, 669,  33,
        666, 543, 764, 719, 550, 531, 289, 473, 138, 483, 457, 451, 460, 361,
        212,  28, 425, 626, 336, 619, 767, 676,   7, 394, 640, 258, 649, 409,
        489,  35, 552, 274, 257, 416, 214, 703, 186, 223, 418, 707, 236, 535,
        417, 407,  25, 226, 523, 643, 601, 599, 475, 208, 260, 111, 709, 717,
        177, 488, 317, 197, 590, 368, 161, 671, 525, 132, 205, 679,   2, 235,
         40, 663,  24, 620, 509, 255, 233, 459, 271, 647, 243, 346, 712, 578,
        595, 129, 279, 424,  29, 140, 570, 495, 447, 650, 388, 192, 656, 170,
        484,  86, 301, 399, 536, 449, 747, 164,  90, 121, 196, 135, 690, 308,
        216, 229, 477, 411, 691, 757, 681, 325, 124,  87, 744,  14, 594, 357,
        423, 144, 456, 542, 430, 436, 241,  46,  93, 153, 715, 392, 470, 569,
        373, 228, 695, 149,  77, 143, 567,  76,  58, 253, 245, 221, 393, 300,
        298, 644, 256, 645,  51, 321, 395, 675, 247, 268, 204, 282, 685, 699,
        262, 190, 352,  91, 250, 564, 508, 242, 340, 413, 688, 533, 638, 499,
        575, 568, 249, 123, 419,  21, 125, 142, 227, 558, 743, 444,  79, 329,
        742, 377, 472, 154, 462, 350, 171, 219, 331, 103, 406, 762, 478, 727,
        528, 165, 538, 139, 234, 398, 286, 736, 729, 583, 188, 571, 259, 206,
        127, 319, 549, 520, 579, 110, 524, 302, 442, 404, 237, 625, 201, 293,
        172, 428, 664, 692, 291, 556, 617,  61, 387, 347, 602, 718, 689,  54,
        740, 434, 686,  47, 147, 328, 639, 292, 540, 697, 108,  94],
       device='cuda:0')
2024-11-14:17:37:02 [INFO    ] [fp.py:323] Find the first child be nn.Linear, name:
2024-11-14:17:37:43 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 0,
 'test_acc': 0.9816,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:17:38:25 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 8,
 'test_acc': 0.9816,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:17:39:07 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 16,
 'test_acc': 0.9815,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:17:39:49 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 24,
 'test_acc': 0.9815,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:17:40:31 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 32,
 'test_acc': 0.9814,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:17:41:12 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 40,
 'test_acc': 0.9813,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:17:41:54 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 48,
 'test_acc': 0.9812,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:17:42:35 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 56,
 'test_acc': 0.9813,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:17:43:17 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 64,
 'test_acc': 0.9813,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:17:43:58 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 72,
 'test_acc': 0.9815,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:17:44:40 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 80,
 'test_acc': 0.9814,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:17:45:21 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 88,
 'test_acc': 0.9815,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:17:46:03 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 96,
 'test_acc': 0.9814,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:17:46:44 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 104,
 'test_acc': 0.9815,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:17:47:26 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 112,
 'test_acc': 0.9814,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:17:48:07 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 120,
 'test_acc': 0.9814,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:17:48:48 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 128,
 'test_acc': 0.9814,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:17:49:30 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 136,
 'test_acc': 0.9814,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:17:50:11 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 144,
 'test_acc': 0.9815,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:17:50:53 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 152,
 'test_acc': 0.9814,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:17:51:34 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 160,
 'test_acc': 0.9814,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:17:52:16 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 168,
 'test_acc': 0.9813,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:17:52:57 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 176,
 'test_acc': 0.9813,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:17:53:39 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 184,
 'test_acc': 0.9813,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:17:54:20 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 192,
 'test_acc': 0.9814,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:17:55:02 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 200,
 'test_acc': 0.9815,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:17:55:43 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 208,
 'test_acc': 0.9816,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:17:56:24 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 216,
 'test_acc': 0.9813,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:17:57:06 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 224,
 'test_acc': 0.9817,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:17:57:47 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 232,
 'test_acc': 0.9814,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:17:58:29 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 240,
 'test_acc': 0.9814,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:17:59:10 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 248,
 'test_acc': 0.9812,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:17:59:52 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 256,
 'test_acc': 0.9812,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:18:00:33 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 264,
 'test_acc': 0.9811,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:18:01:14 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 272,
 'test_acc': 0.9814,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:18:01:55 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 280,
 'test_acc': 0.9811,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:18:02:37 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 288,
 'test_acc': 0.9814,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:18:03:18 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 296,
 'test_acc': 0.9813,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:18:04:00 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 304,
 'test_acc': 0.9811,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:18:04:41 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 312,
 'test_acc': 0.9809,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:18:05:22 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 320,
 'test_acc': 0.9811,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:18:06:04 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 328,
 'test_acc': 0.9813,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:18:06:45 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 336,
 'test_acc': 0.9816,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:18:07:26 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 344,
 'test_acc': 0.9813,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:18:08:08 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 352,
 'test_acc': 0.981,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:18:08:49 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 360,
 'test_acc': 0.9808,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:18:09:30 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 368,
 'test_acc': 0.9807,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:18:10:12 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 376,
 'test_acc': 0.9807,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:18:10:53 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 384,
 'test_acc': 0.9808,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:18:11:34 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 392,
 'test_acc': 0.9813,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:18:12:16 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 400,
 'test_acc': 0.9807,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:18:12:57 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 408,
 'test_acc': 0.9806,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:18:13:38 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 416,
 'test_acc': 0.9808,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:18:14:20 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 424,
 'test_acc': 0.9807,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:18:15:01 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 432,
 'test_acc': 0.9806,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:18:15:42 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 440,
 'test_acc': 0.9807,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:18:16:24 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 448,
 'test_acc': 0.9809,
 'test_asr': 0.9996666666666667,
 'test_ra': 0.0003333333333333333}
2024-11-14:18:17:05 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 456,
 'test_acc': 0.9804,
 'test_asr': 0.9996666666666667,
 'test_ra': 0.0003333333333333333}
2024-11-14:18:17:46 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 464,
 'test_acc': 0.9803,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:18:18:28 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 472,
 'test_acc': 0.9799,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.00044444444444444447}
2024-11-14:18:19:09 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 480,
 'test_acc': 0.9795,
 'test_asr': 0.9996666666666667,
 'test_ra': 0.0003333333333333333}
2024-11-14:18:19:50 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 488,
 'test_acc': 0.9799,
 'test_asr': 0.9996666666666667,
 'test_ra': 0.0003333333333333333}
2024-11-14:18:20:32 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 496,
 'test_acc': 0.9806,
 'test_asr': 0.9996666666666667,
 'test_ra': 0.0003333333333333333}
2024-11-14:18:21:13 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 504,
 'test_acc': 0.9809,
 'test_asr': 0.9996666666666667,
 'test_ra': 0.0003333333333333333}
2024-11-14:18:21:54 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 512,
 'test_acc': 0.9806,
 'test_asr': 0.9996666666666667,
 'test_ra': 0.0003333333333333333}
2024-11-14:18:22:36 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 520,
 'test_acc': 0.9809,
 'test_asr': 0.9996666666666667,
 'test_ra': 0.0003333333333333333}
2024-11-14:18:23:17 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 528,
 'test_acc': 0.9806,
 'test_asr': 0.9996666666666667,
 'test_ra': 0.0003333333333333333}
2024-11-14:18:23:58 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 536,
 'test_acc': 0.9799,
 'test_asr': 0.9996666666666667,
 'test_ra': 0.0003333333333333333}
2024-11-14:18:24:40 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 544,
 'test_acc': 0.9801,
 'test_asr': 0.9996666666666667,
 'test_ra': 0.0003333333333333333}
2024-11-14:18:25:21 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 552,
 'test_acc': 0.9806,
 'test_asr': 0.9996666666666667,
 'test_ra': 0.0003333333333333333}
2024-11-14:18:26:02 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 560,
 'test_acc': 0.9802,
 'test_asr': 0.9996666666666667,
 'test_ra': 0.0003333333333333333}
2024-11-14:18:26:44 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 568,
 'test_acc': 0.9794,
 'test_asr': 0.9996666666666667,
 'test_ra': 0.0003333333333333333}
2024-11-14:18:27:25 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 576,
 'test_acc': 0.9796,
 'test_asr': 0.9996666666666667,
 'test_ra': 0.0003333333333333333}
2024-11-14:18:28:06 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 584,
 'test_acc': 0.9795,
 'test_asr': 0.9996666666666667,
 'test_ra': 0.0003333333333333333}
2024-11-14:18:28:48 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 592,
 'test_acc': 0.9789,
 'test_asr': 0.9996666666666667,
 'test_ra': 0.0003333333333333333}
2024-11-14:18:29:29 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 600,
 'test_acc': 0.9785,
 'test_asr': 0.9996666666666667,
 'test_ra': 0.0003333333333333333}
2024-11-14:18:30:10 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 608,
 'test_acc': 0.9775,
 'test_asr': 0.9996666666666667,
 'test_ra': 0.0003333333333333333}
2024-11-14:18:30:52 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 616,
 'test_acc': 0.9775,
 'test_asr': 0.9996666666666667,
 'test_ra': 0.0003333333333333333}
2024-11-14:18:31:33 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 624,
 'test_acc': 0.9767,
 'test_asr': 0.9996666666666667,
 'test_ra': 0.0003333333333333333}
2024-11-14:18:32:14 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 632,
 'test_acc': 0.9759,
 'test_asr': 0.9996666666666667,
 'test_ra': 0.0003333333333333333}
2024-11-14:18:32:56 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 640,
 'test_acc': 0.9748,
 'test_asr': 0.9996666666666667,
 'test_ra': 0.0003333333333333333}
2024-11-14:18:33:37 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 648,
 'test_acc': 0.975,
 'test_asr': 0.9996666666666667,
 'test_ra': 0.0003333333333333333}
2024-11-14:18:34:18 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 656,
 'test_acc': 0.9743,
 'test_asr': 0.9996666666666667,
 'test_ra': 0.0003333333333333333}
2024-11-14:18:35:00 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 664,
 'test_acc': 0.9738,
 'test_asr': 0.9996666666666667,
 'test_ra': 0.0003333333333333333}
2024-11-14:18:35:41 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 672,
 'test_acc': 0.9735,
 'test_asr': 0.9996666666666667,
 'test_ra': 0.0003333333333333333}
2024-11-14:18:36:22 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 680,
 'test_acc': 0.9726,
 'test_asr': 0.9996666666666667,
 'test_ra': 0.0003333333333333333}
2024-11-14:18:37:04 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 688,
 'test_acc': 0.971,
 'test_asr': 0.9996666666666667,
 'test_ra': 0.0003333333333333333}
2024-11-14:18:37:45 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 696,
 'test_acc': 0.9716,
 'test_asr': 0.9996666666666667,
 'test_ra': 0.0003333333333333333}
2024-11-14:18:38:26 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 704,
 'test_acc': 0.9736,
 'test_asr': 0.9996666666666667,
 'test_ra': 0.0003333333333333333}
2024-11-14:18:39:08 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 712,
 'test_acc': 0.9636,
 'test_asr': 0.9996666666666667,
 'test_ra': 0.0003333333333333333}
2024-11-14:18:39:49 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 720,
 'test_acc': 0.9599,
 'test_asr': 0.9997777777777778,
 'test_ra': 0.00022222222222222223}
2024-11-14:18:40:30 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 728,
 'test_acc': 0.9578,
 'test_asr': 0.9997777777777778,
 'test_ra': 0.00022222222222222223}
2024-11-14:18:41:12 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 736,
 'test_acc': 0.9355,
 'test_asr': 0.9996666666666667,
 'test_ra': 0.00022222222222222223}
2024-11-14:18:41:53 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 744,
 'test_acc': 0.9004,
 'test_asr': 0.9995555555555555,
 'test_ra': 0.0003333333333333333}
2024-11-14:18:42:34 [INFO    ] [trainer_cls.py:65] {'all_filter_num': 768,
 'num_pruned': 752,
 'test_acc': 0.7885,
 'test_asr': 0.9998888888888889,
 'test_ra': 0.0}
2024-11-14:18:42:34 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:42:34 [DEBUG   ] [trainer_cls.py:88] return df with np.nan and None converted by str()
2024-11-14:18:42:34 [INFO    ] [fp.py:395] End prune. Pruned 752/768 test_acc:0.79  test_asr:1.00  test_ra:0.00  
2024-11-14:18:42:34 [DEBUG   ] [trainer_cls.py:1765] This class REQUIRE bd dataset to implement overwrite methods. This is NOT a general class for all cls task.
2024-11-14:18:42:34 [INFO    ] [trainer_cls.py:972] Do NOT set the settings/parameters attr manually after you start training!
You may break the relationship between them.
2024-11-14:18:42:35 [INFO    ] [trainer_cls.py:1030] ('epoch_now:0, '
 'batch_now:0self.amp:True,self.criterion:CrossEntropyLoss(),self.optimizer:SGD '
 '(\n'
 'Parameter Group 0\n'
 '    dampening: 0\n'
 '    initial_lr: 0.01\n'
 '    lr: 0.01\n'
 '    maximize: False\n'
 '    momentum: 0.9\n'
 '    nesterov: False\n'
 '    weight_decay: 0.0005\n'
 "),self.scheduler:{'T_max': 100, 'eta_min': 0, 'base_lrs': [0.01], "
 "'last_epoch': 0, '_step_count': 1, 'verbose': False, "
 "'_get_lr_called_within_step': False, '_last_lr': "
 "[0.01]},self.scaler:{'scale': 65536.0, 'growth_factor': 2.0, "
 "'backoff_factor': 0.5, 'growth_interval': 2000, '_growth_tracker': 0})")
2024-11-14:18:42:42 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.023414850234985 s
2024-11-14:18:42:42 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:42:42 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:43:09 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 1.6319527394241757,
 'clean_test_loss_avg_over_batch': 1.411065748333931,
 'epoch': 0,
 'test_acc': 0.9676,
 'test_asr': 0.9993333333333333,
 'test_ra': 0.0006666666666666666,
 'train_acc': 0.9316,
 'train_acc_clean_only': 0.9316,
 'train_epoch_loss_avg_over_batch': 1.9160408854484559}
2024-11-14:18:43:10 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:18:43:10 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:18:43:10 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:43:10 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:43:17 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.295470237731934 s
2024-11-14:18:43:17 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:43:17 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:43:45 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 0.47364942398336196,
 'clean_test_loss_avg_over_batch': 0.16900614220649005,
 'epoch': 1,
 'test_acc': 0.9703,
 'test_asr': 0.9977777777777778,
 'test_ra': 0.002,
 'train_acc': 0.984,
 'train_acc_clean_only': 0.984,
 'train_epoch_loss_avg_over_batch': 0.6780575886368752}
2024-11-14:18:43:45 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:18:43:45 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:18:43:45 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:43:45 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:43:52 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.279516696929932 s
2024-11-14:18:43:52 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:43:52 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:44:20 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 2.803754727045695,
 'clean_test_loss_avg_over_batch': 2.2840988457202913,
 'epoch': 2,
 'test_acc': 0.146,
 'test_asr': 0.002,
 'test_ra': 0.1728888888888889,
 'train_acc': 0.5916,
 'train_acc_clean_only': 0.5916,
 'train_epoch_loss_avg_over_batch': 1.7758787781000138}
2024-11-14:18:44:20 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:18:44:20 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:18:44:21 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:44:21 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:44:28 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.286051034927368 s
2024-11-14:18:44:28 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:44:28 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:44:56 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 2.3116872708002725,
 'clean_test_loss_avg_over_batch': 2.2115835547447205,
 'epoch': 3,
 'test_acc': 0.1774,
 'test_asr': 0.029444444444444443,
 'test_ra': 0.19544444444444445,
 'train_acc': 0.1552,
 'train_acc_clean_only': 0.1552,
 'train_epoch_loss_avg_over_batch': 2.2626832723617554}
2024-11-14:18:44:56 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:18:44:56 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:18:44:56 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:44:56 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:45:03 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.281246185302734 s
2024-11-14:18:45:03 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:45:03 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:45:31 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 2.6522825823889837,
 'clean_test_loss_avg_over_batch': 2.126890403032303,
 'epoch': 4,
 'test_acc': 0.2017,
 'test_asr': 0.1381111111111111,
 'test_ra': 0.17266666666666666,
 'train_acc': 0.1956,
 'train_acc_clean_only': 0.1956,
 'train_epoch_loss_avg_over_batch': 2.172393798828125}
2024-11-14:18:45:31 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:18:45:31 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:18:45:31 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:45:32 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:45:39 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.294846296310425 s
2024-11-14:18:45:39 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:45:39 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:46:06 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 2.5334001647101507,
 'clean_test_loss_avg_over_batch': 2.101403850317001,
 'epoch': 5,
 'test_acc': 0.2113,
 'test_asr': 0.2564444444444444,
 'test_ra': 0.1468888888888889,
 'train_acc': 0.2092,
 'train_acc_clean_only': 0.2092,
 'train_epoch_loss_avg_over_batch': 2.1206842184066774}
2024-11-14:18:46:07 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:18:46:07 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:18:46:07 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:46:07 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:46:14 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.315686225891113 s
2024-11-14:18:46:14 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:46:14 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:46:42 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 2.8276358909077115,
 'clean_test_loss_avg_over_batch': 2.060957646369934,
 'epoch': 6,
 'test_acc': 0.2253,
 'test_asr': 0.2351111111111111,
 'test_ra': 0.1491111111111111,
 'train_acc': 0.2316,
 'train_acc_clean_only': 0.2316,
 'train_epoch_loss_avg_over_batch': 2.0898271560668946}
2024-11-14:18:46:42 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:18:46:42 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:18:46:42 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:46:43 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:46:50 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.296990633010864 s
2024-11-14:18:46:50 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:46:50 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:47:17 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 2.980200707912445,
 'clean_test_loss_avg_over_batch': 2.029050204157829,
 'epoch': 7,
 'test_acc': 0.2448,
 'test_asr': 0.18688888888888888,
 'test_ra': 0.18944444444444444,
 'train_acc': 0.2488,
 'train_acc_clean_only': 0.2488,
 'train_epoch_loss_avg_over_batch': 2.0554694175720214}
2024-11-14:18:47:18 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:18:47:18 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:18:47:18 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:47:18 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:47:25 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.2860846519470215 s
2024-11-14:18:47:25 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:47:25 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:47:53 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 2.8845475117365518,
 'clean_test_loss_avg_over_batch': 2.0047807842493057,
 'epoch': 8,
 'test_acc': 0.2562,
 'test_asr': 0.21755555555555556,
 'test_ra': 0.18533333333333332,
 'train_acc': 0.2708,
 'train_acc_clean_only': 0.2708,
 'train_epoch_loss_avg_over_batch': 2.0202407121658323}
2024-11-14:18:47:53 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:18:47:53 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:18:47:53 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:47:53 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:48:00 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.273977041244507 s
2024-11-14:18:48:00 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:48:00 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:48:28 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 3.059247155984243,
 'clean_test_loss_avg_over_batch': 1.9882013767957687,
 'epoch': 9,
 'test_acc': 0.2582,
 'test_asr': 0.18411111111111111,
 'test_ra': 0.18388888888888888,
 'train_acc': 0.2632,
 'train_acc_clean_only': 0.2632,
 'train_epoch_loss_avg_over_batch': 2.0186150312423705}
2024-11-14:18:48:28 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:18:48:28 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:18:48:29 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:48:29 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:48:36 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.295314311981201 s
2024-11-14:18:48:36 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:48:36 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:49:04 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 2.4710524015956454,
 'clean_test_loss_avg_over_batch': 1.9988119184970856,
 'epoch': 10,
 'test_acc': 0.249,
 'test_asr': 0.36877777777777776,
 'test_ra': 0.14755555555555555,
 'train_acc': 0.2632,
 'train_acc_clean_only': 0.2632,
 'train_epoch_loss_avg_over_batch': 2.004330039024353}
2024-11-14:18:49:04 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:18:49:04 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:18:49:04 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:49:04 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:49:11 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.29455041885376 s
2024-11-14:18:49:11 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:49:11 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:49:39 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 2.4772691859139337,
 'clean_test_loss_avg_over_batch': 1.980842736363411,
 'epoch': 11,
 'test_acc': 0.2499,
 'test_asr': 0.3377777777777778,
 'test_ra': 0.15455555555555556,
 'train_acc': 0.284,
 'train_acc_clean_only': 0.284,
 'train_epoch_loss_avg_over_batch': 1.9703417062759399}
2024-11-14:18:49:39 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:18:49:39 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:18:49:39 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:49:40 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:49:47 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.294597148895264 s
2024-11-14:18:49:47 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:49:47 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:50:15 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 2.8267936375406055,
 'clean_test_loss_avg_over_batch': 1.9747678637504578,
 'epoch': 12,
 'test_acc': 0.26,
 'test_asr': 0.23633333333333334,
 'test_ra': 0.177,
 'train_acc': 0.276,
 'train_acc_clean_only': 0.276,
 'train_epoch_loss_avg_over_batch': 1.9530853748321533}
2024-11-14:18:50:15 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:18:50:15 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:18:50:15 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:50:15 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:50:22 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.293415546417236 s
2024-11-14:18:50:22 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:50:22 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:50:50 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 2.42903071641922,
 'clean_test_loss_avg_over_batch': 1.9554821372032165,
 'epoch': 13,
 'test_acc': 0.2746,
 'test_asr': 0.2437777777777778,
 'test_ra': 0.18855555555555556,
 'train_acc': 0.2876,
 'train_acc_clean_only': 0.2876,
 'train_epoch_loss_avg_over_batch': 1.9342395067214966}
2024-11-14:18:50:50 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:18:50:50 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:18:50:50 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:50:51 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:50:58 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.293194532394409 s
2024-11-14:18:50:58 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:50:58 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:51:25 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 2.7073839439286127,
 'clean_test_loss_avg_over_batch': 1.9350551426410676,
 'epoch': 14,
 'test_acc': 0.284,
 'test_asr': 0.22666666666666666,
 'test_ra': 0.19733333333333333,
 'train_acc': 0.2768,
 'train_acc_clean_only': 0.2768,
 'train_epoch_loss_avg_over_batch': 1.938284206390381}
2024-11-14:18:51:26 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:18:51:26 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:18:51:26 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:51:26 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:51:33 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.294497489929199 s
2024-11-14:18:51:33 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:51:33 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:52:01 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 2.526324835088518,
 'clean_test_loss_avg_over_batch': 1.952011176943779,
 'epoch': 15,
 'test_acc': 0.2755,
 'test_asr': 0.23777777777777778,
 'test_ra': 0.18911111111111112,
 'train_acc': 0.2892,
 'train_acc_clean_only': 0.2892,
 'train_epoch_loss_avg_over_batch': 1.9055704951286316}
2024-11-14:18:52:01 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:18:52:01 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:18:52:01 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:52:01 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:52:08 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.296921014785767 s
2024-11-14:18:52:08 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:52:08 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:52:36 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 2.499167415830824,
 'clean_test_loss_avg_over_batch': 1.9233507215976715,
 'epoch': 16,
 'test_acc': 0.2854,
 'test_asr': 0.22722222222222221,
 'test_ra': 0.20155555555555554,
 'train_acc': 0.298,
 'train_acc_clean_only': 0.298,
 'train_epoch_loss_avg_over_batch': 1.9010183691978455}
2024-11-14:18:52:36 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:18:52:36 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:18:52:37 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:52:37 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:52:44 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.321563005447388 s
2024-11-14:18:52:44 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:52:44 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:53:12 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 2.6337026092741223,
 'clean_test_loss_avg_over_batch': 1.904536059498787,
 'epoch': 17,
 'test_acc': 0.2946,
 'test_asr': 0.17822222222222223,
 'test_ra': 0.22355555555555556,
 'train_acc': 0.2904,
 'train_acc_clean_only': 0.2904,
 'train_epoch_loss_avg_over_batch': 1.894567322731018}
2024-11-14:18:53:12 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:18:53:12 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:18:53:12 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:53:13 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:53:19 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.300451993942261 s
2024-11-14:18:53:19 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:53:19 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:53:47 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 2.8348933855692544,
 'clean_test_loss_avg_over_batch': 1.901424291729927,
 'epoch': 18,
 'test_acc': 0.2944,
 'test_asr': 0.20833333333333334,
 'test_ra': 0.21488888888888888,
 'train_acc': 0.2968,
 'train_acc_clean_only': 0.2968,
 'train_epoch_loss_avg_over_batch': 1.8877686738967896}
2024-11-14:18:53:48 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:18:53:48 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:18:53:48 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:53:48 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:53:55 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.299435377120972 s
2024-11-14:18:53:55 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:53:55 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:54:23 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 3.364432175954183,
 'clean_test_loss_avg_over_batch': 1.8584702014923096,
 'epoch': 19,
 'test_acc': 0.3156,
 'test_asr': 0.05311111111111111,
 'test_ra': 0.285,
 'train_acc': 0.3184,
 'train_acc_clean_only': 0.3184,
 'train_epoch_loss_avg_over_batch': 1.8472272396087646}
2024-11-14:18:54:23 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:18:54:23 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:18:54:23 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:54:23 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:54:30 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.292192459106445 s
2024-11-14:18:54:30 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:54:30 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:54:58 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 3.075820962587992,
 'clean_test_loss_avg_over_batch': 1.8414582580327987,
 'epoch': 20,
 'test_acc': 0.3228,
 'test_asr': 0.1408888888888889,
 'test_ra': 0.2607777777777778,
 'train_acc': 0.3224,
 'train_acc_clean_only': 0.3224,
 'train_epoch_loss_avg_over_batch': 1.8449795603752137}
2024-11-14:18:54:58 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:18:54:58 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:18:54:59 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:54:59 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:55:06 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.300063848495483 s
2024-11-14:18:55:06 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:55:06 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:55:34 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 3.0102922717730203,
 'clean_test_loss_avg_over_batch': 1.85291668176651,
 'epoch': 21,
 'test_acc': 0.3128,
 'test_asr': 0.1817777777777778,
 'test_ra': 0.23622222222222222,
 'train_acc': 0.326,
 'train_acc_clean_only': 0.326,
 'train_epoch_loss_avg_over_batch': 1.8079448819160462}
2024-11-14:18:55:34 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:18:55:34 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:18:55:34 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:55:34 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:55:41 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.286364793777466 s
2024-11-14:18:55:41 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:55:41 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:56:09 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 3.1793732974264355,
 'clean_test_loss_avg_over_batch': 1.8572277486324311,
 'epoch': 22,
 'test_acc': 0.3131,
 'test_asr': 0.127,
 'test_ra': 0.237,
 'train_acc': 0.3368,
 'train_acc_clean_only': 0.3368,
 'train_epoch_loss_avg_over_batch': 1.7928422689437866}
2024-11-14:18:56:09 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:18:56:09 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:18:56:09 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:56:10 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:56:17 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.289802312850952 s
2024-11-14:18:56:17 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:56:17 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:56:45 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 2.550369474622938,
 'clean_test_loss_avg_over_batch': 1.8622067153453827,
 'epoch': 23,
 'test_acc': 0.3169,
 'test_asr': 0.21822222222222223,
 'test_ra': 0.2341111111111111,
 'train_acc': 0.348,
 'train_acc_clean_only': 0.348,
 'train_epoch_loss_avg_over_batch': 1.7765529036521912}
2024-11-14:18:56:45 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:18:56:45 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:18:56:45 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:56:45 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:56:52 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.282536268234253 s
2024-11-14:18:56:52 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:56:52 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:57:20 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 2.7245221071773105,
 'clean_test_loss_avg_over_batch': 1.8483927309513093,
 'epoch': 24,
 'test_acc': 0.3231,
 'test_asr': 0.15888888888888889,
 'test_ra': 0.24066666666666667,
 'train_acc': 0.3376,
 'train_acc_clean_only': 0.3376,
 'train_epoch_loss_avg_over_batch': 1.780533254146576}
2024-11-14:18:57:20 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:18:57:20 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:18:57:20 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:57:21 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:57:28 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.283854722976685 s
2024-11-14:18:57:28 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:57:28 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:57:55 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 2.8670326670010886,
 'clean_test_loss_avg_over_batch': 1.8231108367443085,
 'epoch': 25,
 'test_acc': 0.3268,
 'test_asr': 0.18644444444444444,
 'test_ra': 0.24355555555555555,
 'train_acc': 0.3472,
 'train_acc_clean_only': 0.3472,
 'train_epoch_loss_avg_over_batch': 1.7549739360809327}
2024-11-14:18:57:56 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:18:57:56 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:18:57:56 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:57:56 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:58:03 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.296395778656006 s
2024-11-14:18:58:03 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:58:03 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:58:31 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 2.6844835215144687,
 'clean_test_loss_avg_over_batch': 1.821580994129181,
 'epoch': 26,
 'test_acc': 0.3256,
 'test_asr': 0.23433333333333334,
 'test_ra': 0.227,
 'train_acc': 0.3528,
 'train_acc_clean_only': 0.3528,
 'train_epoch_loss_avg_over_batch': 1.7241031646728515}
2024-11-14:18:58:31 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:18:58:31 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:18:58:31 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:58:31 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:58:38 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.302108287811279 s
2024-11-14:18:58:38 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:58:38 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:59:06 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 3.4991220898098416,
 'clean_test_loss_avg_over_batch': 1.7952365100383758,
 'epoch': 27,
 'test_acc': 0.3299,
 'test_asr': 0.11677777777777777,
 'test_ra': 0.24911111111111112,
 'train_acc': 0.3764,
 'train_acc_clean_only': 0.3764,
 'train_epoch_loss_avg_over_batch': 1.699198603630066}
2024-11-14:18:59:06 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:18:59:06 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:18:59:06 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:59:07 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:59:14 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.295331001281738 s
2024-11-14:18:59:14 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:59:14 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:59:42 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 3.2723856965700784,
 'clean_test_loss_avg_over_batch': 1.8099440217018128,
 'epoch': 28,
 'test_acc': 0.3273,
 'test_asr': 0.14377777777777778,
 'test_ra': 0.23622222222222222,
 'train_acc': 0.3792,
 'train_acc_clean_only': 0.3792,
 'train_epoch_loss_avg_over_batch': 1.6920741081237793}
2024-11-14:18:59:42 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:18:59:42 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:18:59:42 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:59:42 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:18:59:49 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.2888264656066895 s
2024-11-14:18:59:49 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:18:59:49 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:00:17 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 2.407352474000719,
 'clean_test_loss_avg_over_batch': 1.8396887719631194,
 'epoch': 29,
 'test_acc': 0.3297,
 'test_asr': 0.24711111111111111,
 'test_ra': 0.24688888888888888,
 'train_acc': 0.3876,
 'train_acc_clean_only': 0.3876,
 'train_epoch_loss_avg_over_batch': 1.713160789012909}
2024-11-14:19:00:17 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:00:17 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:00:17 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:00:18 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:00:25 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.296135425567627 s
2024-11-14:19:00:25 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:00:25 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:00:52 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 3.262749274571737,
 'clean_test_loss_avg_over_batch': 1.7953788787126541,
 'epoch': 30,
 'test_acc': 0.3415,
 'test_asr': 0.15155555555555555,
 'test_ra': 0.24466666666666667,
 'train_acc': 0.3744,
 'train_acc_clean_only': 0.3744,
 'train_epoch_loss_avg_over_batch': 1.6635128498077392}
2024-11-14:19:00:53 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:00:53 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:00:53 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:00:53 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:01:00 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.29174017906189 s
2024-11-14:19:01:00 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:01:00 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:01:28 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 3.201273308859931,
 'clean_test_loss_avg_over_batch': 1.790175423026085,
 'epoch': 31,
 'test_acc': 0.339,
 'test_asr': 0.18811111111111112,
 'test_ra': 0.23122222222222222,
 'train_acc': 0.414,
 'train_acc_clean_only': 0.414,
 'train_epoch_loss_avg_over_batch': 1.610812497138977}
2024-11-14:19:01:28 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:01:28 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:01:28 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:01:28 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:01:35 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.289120435714722 s
2024-11-14:19:01:35 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:01:35 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:02:03 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 3.510897159576416,
 'clean_test_loss_avg_over_batch': 1.8147911787033082,
 'epoch': 32,
 'test_acc': 0.342,
 'test_asr': 0.13644444444444445,
 'test_ra': 0.2477777777777778,
 'train_acc': 0.4092,
 'train_acc_clean_only': 0.4092,
 'train_epoch_loss_avg_over_batch': 1.6077738165855409}
2024-11-14:19:02:03 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:02:03 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:02:03 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:02:04 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:02:11 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.294360637664795 s
2024-11-14:19:02:11 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:02:11 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:02:39 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 3.3082967400550842,
 'clean_test_loss_avg_over_batch': 1.7432152658700943,
 'epoch': 33,
 'test_acc': 0.3601,
 'test_asr': 0.15033333333333335,
 'test_ra': 0.2733333333333333,
 'train_acc': 0.42,
 'train_acc_clean_only': 0.42,
 'train_epoch_loss_avg_over_batch': 1.5897591948509215}
2024-11-14:19:02:39 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:02:39 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:02:39 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:02:39 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:02:46 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.325649261474609 s
2024-11-14:19:02:46 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:02:46 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:03:14 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 3.225191136201223,
 'clean_test_loss_avg_over_batch': 1.8035033464431762,
 'epoch': 34,
 'test_acc': 0.3382,
 'test_asr': 0.21266666666666667,
 'test_ra': 0.21844444444444444,
 'train_acc': 0.4272,
 'train_acc_clean_only': 0.4272,
 'train_epoch_loss_avg_over_batch': 1.5753915429115295}
2024-11-14:19:03:14 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:03:14 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:03:15 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:03:15 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:03:22 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.284586191177368 s
2024-11-14:19:03:22 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:03:22 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:03:50 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 3.4199172457059226,
 'clean_test_loss_avg_over_batch': 1.7169056445360185,
 'epoch': 35,
 'test_acc': 0.3709,
 'test_asr': 0.11888888888888889,
 'test_ra': 0.29288888888888887,
 'train_acc': 0.436,
 'train_acc_clean_only': 0.436,
 'train_epoch_loss_avg_over_batch': 1.5422059297561646}
2024-11-14:19:03:50 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:03:50 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:03:50 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:03:50 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:03:57 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.2924439907073975 s
2024-11-14:19:03:57 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:03:57 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:04:25 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 3.6979094015227423,
 'clean_test_loss_avg_over_batch': 1.7423561602830886,
 'epoch': 36,
 'test_acc': 0.3675,
 'test_asr': 0.13277777777777777,
 'test_ra': 0.261,
 'train_acc': 0.4524,
 'train_acc_clean_only': 0.4524,
 'train_epoch_loss_avg_over_batch': 1.5023999452590941}
2024-11-14:19:04:25 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:04:25 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:04:25 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:04:26 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:04:33 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.2877795696258545 s
2024-11-14:19:04:33 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:04:33 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:05:00 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 3.373797489537133,
 'clean_test_loss_avg_over_batch': 1.7189580529928208,
 'epoch': 37,
 'test_acc': 0.3766,
 'test_asr': 0.16411111111111112,
 'test_ra': 0.29255555555555557,
 'train_acc': 0.4644,
 'train_acc_clean_only': 0.4644,
 'train_epoch_loss_avg_over_batch': 1.4766539692878724}
2024-11-14:19:05:01 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:05:01 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:05:01 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:05:01 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:05:08 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.2872631549835205 s
2024-11-14:19:05:08 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:05:08 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:05:36 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 3.3329113721847534,
 'clean_test_loss_avg_over_batch': 1.732068458199501,
 'epoch': 38,
 'test_acc': 0.3688,
 'test_asr': 0.14033333333333334,
 'test_ra': 0.2992222222222222,
 'train_acc': 0.4648,
 'train_acc_clean_only': 0.4648,
 'train_epoch_loss_avg_over_batch': 1.465809440612793}
2024-11-14:19:05:36 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:05:36 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:05:36 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:05:36 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:05:43 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.291550159454346 s
2024-11-14:19:05:43 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:05:43 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:06:11 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 3.4332818388938904,
 'clean_test_loss_avg_over_batch': 1.7467194855213166,
 'epoch': 39,
 'test_acc': 0.3751,
 'test_asr': 0.13355555555555557,
 'test_ra': 0.2921111111111111,
 'train_acc': 0.4544,
 'train_acc_clean_only': 0.4544,
 'train_epoch_loss_avg_over_batch': 1.4791774153709412}
2024-11-14:19:06:12 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:06:12 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:06:12 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:06:12 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:06:19 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.302994728088379 s
2024-11-14:19:06:19 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:06:19 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:06:47 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 3.006297833389706,
 'clean_test_loss_avg_over_batch': 1.7414504021406174,
 'epoch': 40,
 'test_acc': 0.3683,
 'test_asr': 0.16055555555555556,
 'test_ra': 0.30644444444444446,
 'train_acc': 0.4688,
 'train_acc_clean_only': 0.4688,
 'train_epoch_loss_avg_over_batch': 1.4467872381210327}
2024-11-14:19:06:47 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:06:47 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:06:47 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:06:47 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:06:54 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.297083854675293 s
2024-11-14:19:06:54 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:06:54 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:07:22 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 3.820293969578213,
 'clean_test_loss_avg_over_batch': 1.6440910756587983,
 'epoch': 41,
 'test_acc': 0.3987,
 'test_asr': 0.066,
 'test_ra': 0.3477777777777778,
 'train_acc': 0.474,
 'train_acc_clean_only': 0.474,
 'train_epoch_loss_avg_over_batch': 1.4480573892593385}
2024-11-14:19:07:22 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:07:22 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:07:22 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:07:23 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:07:30 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.303093194961548 s
2024-11-14:19:07:30 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:07:30 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:07:58 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 4.294372227456835,
 'clean_test_loss_avg_over_batch': 1.6710395812988281,
 'epoch': 42,
 'test_acc': 0.3971,
 'test_asr': 0.059666666666666666,
 'test_ra': 0.33611111111111114,
 'train_acc': 0.4884,
 'train_acc_clean_only': 0.4884,
 'train_epoch_loss_avg_over_batch': 1.3944889903068542}
2024-11-14:19:07:58 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:07:58 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:07:58 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:07:58 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:08:05 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.293578386306763 s
2024-11-14:19:08:05 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:08:05 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:08:33 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 4.611324866612752,
 'clean_test_loss_avg_over_batch': 1.6532434225082397,
 'epoch': 43,
 'test_acc': 0.397,
 'test_asr': 0.042777777777777776,
 'test_ra': 0.3333333333333333,
 'train_acc': 0.506,
 'train_acc_clean_only': 0.506,
 'train_epoch_loss_avg_over_batch': 1.3738788604736327}
2024-11-14:19:08:33 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:08:33 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:08:33 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:08:34 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:08:41 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.287773609161377 s
2024-11-14:19:08:41 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:08:41 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:09:08 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 4.182947483327654,
 'clean_test_loss_avg_over_batch': 1.6853362441062927,
 'epoch': 44,
 'test_acc': 0.39,
 'test_asr': 0.07377777777777778,
 'test_ra': 0.314,
 'train_acc': 0.5036,
 'train_acc_clean_only': 0.5036,
 'train_epoch_loss_avg_over_batch': 1.3782132029533387}
2024-11-14:19:09:09 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:09:09 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:09:09 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:09:09 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:09:16 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.2880988121032715 s
2024-11-14:19:09:16 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:09:16 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:09:44 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 4.537105321884155,
 'clean_test_loss_avg_over_batch': 1.672240510582924,
 'epoch': 45,
 'test_acc': 0.3963,
 'test_asr': 0.06777777777777778,
 'test_ra': 0.3042222222222222,
 'train_acc': 0.5196,
 'train_acc_clean_only': 0.5196,
 'train_epoch_loss_avg_over_batch': 1.3203372478485107}
2024-11-14:19:09:44 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:09:44 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:09:44 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:09:45 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:09:52 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.2948527336120605 s
2024-11-14:19:09:52 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:09:52 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:10:19 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 5.187387029329936,
 'clean_test_loss_avg_over_batch': 1.7659265518188476,
 'epoch': 46,
 'test_acc': 0.3782,
 'test_asr': 0.052333333333333336,
 'test_ra': 0.2842222222222222,
 'train_acc': 0.5156,
 'train_acc_clean_only': 0.5156,
 'train_epoch_loss_avg_over_batch': 1.320897352695465}
2024-11-14:19:10:20 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:10:20 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:10:20 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:10:20 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:10:27 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.283793210983276 s
2024-11-14:19:10:27 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:10:27 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:10:55 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 4.246184064282311,
 'clean_test_loss_avg_over_batch': 1.659344670176506,
 'epoch': 47,
 'test_acc': 0.3973,
 'test_asr': 0.09022222222222222,
 'test_ra': 0.31433333333333335,
 'train_acc': 0.514,
 'train_acc_clean_only': 0.514,
 'train_epoch_loss_avg_over_batch': 1.3273304224014282}
2024-11-14:19:10:55 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:10:55 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:10:55 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:10:55 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:11:02 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.289776563644409 s
2024-11-14:19:11:02 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:11:02 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:11:30 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 4.01839099989997,
 'clean_test_loss_avg_over_batch': 1.6161745220422745,
 'epoch': 48,
 'test_acc': 0.417,
 'test_asr': 0.06966666666666667,
 'test_ra': 0.36677777777777776,
 'train_acc': 0.526,
 'train_acc_clean_only': 0.526,
 'train_epoch_loss_avg_over_batch': 1.262131941318512}
2024-11-14:19:11:30 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:11:30 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:11:30 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:11:31 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:11:38 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.297835350036621 s
2024-11-14:19:11:38 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:11:38 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:12:06 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 4.153711113664839,
 'clean_test_loss_avg_over_batch': 1.6692549198865891,
 'epoch': 49,
 'test_acc': 0.3951,
 'test_asr': 0.07877777777777778,
 'test_ra': 0.3201111111111111,
 'train_acc': 0.5444,
 'train_acc_clean_only': 0.5444,
 'train_epoch_loss_avg_over_batch': 1.2490710735321044}
2024-11-14:19:12:06 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:12:06 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:12:06 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:12:06 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:12:13 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.2940545082092285 s
2024-11-14:19:12:13 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:12:13 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:12:41 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 3.983427729871538,
 'clean_test_loss_avg_over_batch': 1.5918643921613693,
 'epoch': 50,
 'test_acc': 0.4265,
 'test_asr': 0.08333333333333333,
 'test_ra': 0.3678888888888889,
 'train_acc': 0.5528,
 'train_acc_clean_only': 0.5528,
 'train_epoch_loss_avg_over_batch': 1.205409574508667}
2024-11-14:19:12:41 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:12:41 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:12:41 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:12:42 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:12:49 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.299797058105469 s
2024-11-14:19:12:49 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:12:49 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:13:16 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 3.9376402033699884,
 'clean_test_loss_avg_over_batch': 1.6425054371356964,
 'epoch': 51,
 'test_acc': 0.4074,
 'test_asr': 0.10122222222222223,
 'test_ra': 0.3367777777777778,
 'train_acc': 0.5752,
 'train_acc_clean_only': 0.5752,
 'train_epoch_loss_avg_over_batch': 1.1820934653282165}
2024-11-14:19:13:17 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:13:17 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:13:17 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:13:17 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:13:24 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.295152425765991 s
2024-11-14:19:13:24 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:13:24 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:13:52 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 5.034438080257839,
 'clean_test_loss_avg_over_batch': 1.636721608042717,
 'epoch': 52,
 'test_acc': 0.4191,
 'test_asr': 0.05488888888888889,
 'test_ra': 0.3428888888888889,
 'train_acc': 0.5744,
 'train_acc_clean_only': 0.5744,
 'train_epoch_loss_avg_over_batch': 1.173806619644165}
2024-11-14:19:13:52 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:13:52 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:13:52 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:13:53 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:14:00 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.305160760879517 s
2024-11-14:19:14:00 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:14:00 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:14:27 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 4.5377764039569435,
 'clean_test_loss_avg_over_batch': 1.6192642271518707,
 'epoch': 53,
 'test_acc': 0.42,
 'test_asr': 0.0661111111111111,
 'test_ra': 0.3638888888888889,
 'train_acc': 0.5892,
 'train_acc_clean_only': 0.5892,
 'train_epoch_loss_avg_over_batch': 1.1292681574821473}
2024-11-14:19:14:28 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:14:28 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:14:28 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:14:28 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:14:35 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.28751802444458 s
2024-11-14:19:14:35 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:14:35 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:15:03 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 4.149235394265917,
 'clean_test_loss_avg_over_batch': 1.6396609723567963,
 'epoch': 54,
 'test_acc': 0.4234,
 'test_asr': 0.09433333333333334,
 'test_ra': 0.3358888888888889,
 'train_acc': 0.6144,
 'train_acc_clean_only': 0.6144,
 'train_epoch_loss_avg_over_batch': 1.0691510558128356}
2024-11-14:19:15:03 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:15:03 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:15:03 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:15:03 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:15:10 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.295929431915283 s
2024-11-14:19:15:10 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:15:10 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:15:38 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 3.6741027103530035,
 'clean_test_loss_avg_over_batch': 1.6392949402332306,
 'epoch': 55,
 'test_acc': 0.4302,
 'test_asr': 0.12088888888888889,
 'test_ra': 0.3542222222222222,
 'train_acc': 0.6344,
 'train_acc_clean_only': 0.6344,
 'train_epoch_loss_avg_over_batch': 1.0221989929676056}
2024-11-14:19:15:38 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:15:38 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:15:38 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:15:39 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:15:46 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.300009489059448 s
2024-11-14:19:15:46 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:15:46 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:16:14 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 3.9651088582144842,
 'clean_test_loss_avg_over_batch': 1.764226931333542,
 'epoch': 56,
 'test_acc': 0.4032,
 'test_asr': 0.16333333333333333,
 'test_ra': 0.3038888888888889,
 'train_acc': 0.642,
 'train_acc_clean_only': 0.642,
 'train_epoch_loss_avg_over_batch': 1.0135528087615966}
2024-11-14:19:16:14 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:16:14 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:16:14 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:16:14 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:16:21 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.296148777008057 s
2024-11-14:19:16:21 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:16:21 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:16:49 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 3.7076250116030374,
 'clean_test_loss_avg_over_batch': 1.7492188692092896,
 'epoch': 57,
 'test_acc': 0.4108,
 'test_asr': 0.14066666666666666,
 'test_ra': 0.31477777777777777,
 'train_acc': 0.6284,
 'train_acc_clean_only': 0.6284,
 'train_epoch_loss_avg_over_batch': 0.991059523820877}
2024-11-14:19:16:49 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:16:49 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:16:49 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:16:50 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:16:57 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.295215845108032 s
2024-11-14:19:16:57 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:16:57 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:17:24 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 5.072176112069024,
 'clean_test_loss_avg_over_batch': 1.7072436571121217,
 'epoch': 58,
 'test_acc': 0.4176,
 'test_asr': 0.04844444444444444,
 'test_ra': 0.35788888888888887,
 'train_acc': 0.6528,
 'train_acc_clean_only': 0.6528,
 'train_epoch_loss_avg_over_batch': 0.9758443057537078}
2024-11-14:19:17:25 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:17:25 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:17:25 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:17:25 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:17:32 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.290087461471558 s
2024-11-14:19:17:32 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:17:32 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:18:00 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 4.480216821034749,
 'clean_test_loss_avg_over_batch': 1.6857057332992553,
 'epoch': 59,
 'test_acc': 0.4243,
 'test_asr': 0.07855555555555556,
 'test_ra': 0.34344444444444444,
 'train_acc': 0.658,
 'train_acc_clean_only': 0.658,
 'train_epoch_loss_avg_over_batch': 0.9481074094772339}
2024-11-14:19:18:00 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:18:00 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:18:00 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:18:00 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:18:07 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.2938477993011475 s
2024-11-14:19:18:07 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:18:07 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:18:35 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 3.747225715054406,
 'clean_test_loss_avg_over_batch': 1.7801462322473527,
 'epoch': 60,
 'test_acc': 0.4178,
 'test_asr': 0.139,
 'test_ra': 0.3302222222222222,
 'train_acc': 0.6688,
 'train_acc_clean_only': 0.6688,
 'train_epoch_loss_avg_over_batch': 0.9106256842613221}
2024-11-14:19:18:35 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:18:35 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:18:36 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:18:36 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:18:43 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.30196738243103 s
2024-11-14:19:18:43 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:18:43 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:19:11 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 5.439620018005371,
 'clean_test_loss_avg_over_batch': 1.6888151526451112,
 'epoch': 61,
 'test_acc': 0.4289,
 'test_asr': 0.05255555555555556,
 'test_ra': 0.34944444444444445,
 'train_acc': 0.6764,
 'train_acc_clean_only': 0.6764,
 'train_epoch_loss_avg_over_batch': 0.9107688307762146}
2024-11-14:19:19:11 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:19:11 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:19:11 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:19:11 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:19:18 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.29667329788208 s
2024-11-14:19:19:18 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:19:18 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:19:46 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 4.984147151311238,
 'clean_test_loss_avg_over_batch': 1.667557841539383,
 'epoch': 62,
 'test_acc': 0.4383,
 'test_asr': 0.06944444444444445,
 'test_ra': 0.3596666666666667,
 'train_acc': 0.6948,
 'train_acc_clean_only': 0.6948,
 'train_epoch_loss_avg_over_batch': 0.8553148210048676}
2024-11-14:19:19:46 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:19:46 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:19:46 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:19:47 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:19:54 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.289477586746216 s
2024-11-14:19:19:54 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:19:54 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:20:21 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 4.5028487708833485,
 'clean_test_loss_avg_over_batch': 1.7057321310043334,
 'epoch': 63,
 'test_acc': 0.4387,
 'test_asr': 0.08355555555555555,
 'test_ra': 0.36966666666666664,
 'train_acc': 0.7208,
 'train_acc_clean_only': 0.7208,
 'train_epoch_loss_avg_over_batch': 0.7981571078300476}
2024-11-14:19:20:22 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:20:22 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:20:22 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:20:22 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:20:29 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.29548192024231 s
2024-11-14:19:20:29 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:20:29 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:20:57 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 5.359868910577562,
 'clean_test_loss_avg_over_batch': 1.6965906500816346,
 'epoch': 64,
 'test_acc': 0.4443,
 'test_asr': 0.04588888888888889,
 'test_ra': 0.37233333333333335,
 'train_acc': 0.7176,
 'train_acc_clean_only': 0.7176,
 'train_epoch_loss_avg_over_batch': 0.8170869827270508}
2024-11-14:19:20:57 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:20:57 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:20:57 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:20:58 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:21:04 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.304335117340088 s
2024-11-14:19:21:04 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:21:04 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:21:32 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 5.068655345175001,
 'clean_test_loss_avg_over_batch': 1.6928007632493973,
 'epoch': 65,
 'test_acc': 0.446,
 'test_asr': 0.057,
 'test_ra': 0.38822222222222225,
 'train_acc': 0.7356,
 'train_acc_clean_only': 0.7356,
 'train_epoch_loss_avg_over_batch': 0.7697361052036286}
2024-11-14:19:21:32 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:21:32 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:21:33 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:21:33 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:21:40 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.295945405960083 s
2024-11-14:19:21:40 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:21:40 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:22:08 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 5.337287969059414,
 'clean_test_loss_avg_over_batch': 1.773118367791176,
 'epoch': 66,
 'test_acc': 0.431,
 'test_asr': 0.05455555555555556,
 'test_ra': 0.35055555555555556,
 'train_acc': 0.7304,
 'train_acc_clean_only': 0.7304,
 'train_epoch_loss_avg_over_batch': 0.7693579196929932}
2024-11-14:19:22:08 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:22:08 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:22:08 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:22:08 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:22:15 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.295424222946167 s
2024-11-14:19:22:15 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:22:15 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:22:43 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 5.333296140034993,
 'clean_test_loss_avg_over_batch': 1.703817555308342,
 'epoch': 67,
 'test_acc': 0.4429,
 'test_asr': 0.046,
 'test_ra': 0.39022222222222225,
 'train_acc': 0.74,
 'train_acc_clean_only': 0.74,
 'train_epoch_loss_avg_over_batch': 0.7408858656883239}
2024-11-14:19:22:43 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:22:43 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:22:43 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:22:44 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:22:51 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.293323040008545 s
2024-11-14:19:22:51 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:22:51 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:23:18 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 4.63978652159373,
 'clean_test_loss_avg_over_batch': 1.7549002140760421,
 'epoch': 68,
 'test_acc': 0.4411,
 'test_asr': 0.07944444444444444,
 'test_ra': 0.37277777777777776,
 'train_acc': 0.7596,
 'train_acc_clean_only': 0.7596,
 'train_epoch_loss_avg_over_batch': 0.7044316411018372}
2024-11-14:19:23:19 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:23:19 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:23:19 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:23:19 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:23:26 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.324223041534424 s
2024-11-14:19:23:26 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:23:26 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:23:54 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 5.880653897921245,
 'clean_test_loss_avg_over_batch': 1.8153565227985382,
 'epoch': 69,
 'test_acc': 0.4288,
 'test_asr': 0.049444444444444444,
 'test_ra': 0.346,
 'train_acc': 0.7564,
 'train_acc_clean_only': 0.7564,
 'train_epoch_loss_avg_over_batch': 0.7229545950889588}
2024-11-14:19:23:54 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:23:54 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:23:54 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:23:55 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:24:02 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.305079936981201 s
2024-11-14:19:24:02 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:24:02 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:24:30 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 4.46377436319987,
 'clean_test_loss_avg_over_batch': 1.8074794262647629,
 'epoch': 70,
 'test_acc': 0.435,
 'test_asr': 0.09077777777777778,
 'test_ra': 0.3602222222222222,
 'train_acc': 0.78,
 'train_acc_clean_only': 0.78,
 'train_epoch_loss_avg_over_batch': 0.6689142107963562}
2024-11-14:19:24:30 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:24:30 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:24:30 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:24:30 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:24:37 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.3042144775390625 s
2024-11-14:19:24:37 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:24:37 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:25:05 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 5.9560334417555065,
 'clean_test_loss_avg_over_batch': 1.7615569531917572,
 'epoch': 71,
 'test_acc': 0.4491,
 'test_asr': 0.03666666666666667,
 'test_ra': 0.3828888888888889,
 'train_acc': 0.7764,
 'train_acc_clean_only': 0.7764,
 'train_epoch_loss_avg_over_batch': 0.6408155500888825}
2024-11-14:19:25:05 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:25:05 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:25:05 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:25:06 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:25:13 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.2940638065338135 s
2024-11-14:19:25:13 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:25:13 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:25:40 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 5.637826707628038,
 'clean_test_loss_avg_over_batch': 1.7393303841352463,
 'epoch': 72,
 'test_acc': 0.4402,
 'test_asr': 0.05366666666666667,
 'test_ra': 0.37077777777777776,
 'train_acc': 0.794,
 'train_acc_clean_only': 0.794,
 'train_epoch_loss_avg_over_batch': 0.6124693274497985}
2024-11-14:19:25:41 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:25:41 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:25:41 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:25:41 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:25:48 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.2934887409210205 s
2024-11-14:19:25:48 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:25:48 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:26:16 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 5.239799049165514,
 'clean_test_loss_avg_over_batch': 1.8047923564910888,
 'epoch': 73,
 'test_acc': 0.4321,
 'test_asr': 0.06188888888888889,
 'test_ra': 0.3547777777777778,
 'train_acc': 0.8148,
 'train_acc_clean_only': 0.8148,
 'train_epoch_loss_avg_over_batch': 0.5558575034141541}
2024-11-14:19:26:16 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:26:16 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:26:16 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:26:16 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:26:23 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.296411991119385 s
2024-11-14:19:26:23 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:26:23 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:26:51 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 5.412151628070408,
 'clean_test_loss_avg_over_batch': 1.7434098303318024,
 'epoch': 74,
 'test_acc': 0.4464,
 'test_asr': 0.05566666666666667,
 'test_ra': 0.38133333333333336,
 'train_acc': 0.8216,
 'train_acc_clean_only': 0.8216,
 'train_epoch_loss_avg_over_batch': 0.5458476185798645}
2024-11-14:19:26:51 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:26:51 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:26:52 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:26:52 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:26:59 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.301589488983154 s
2024-11-14:19:26:59 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:26:59 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:27:27 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 5.037408855226305,
 'clean_test_loss_avg_over_batch': 1.8213706076145173,
 'epoch': 75,
 'test_acc': 0.4445,
 'test_asr': 0.07388888888888889,
 'test_ra': 0.35888888888888887,
 'train_acc': 0.8348,
 'train_acc_clean_only': 0.8348,
 'train_epoch_loss_avg_over_batch': 0.526901650428772}
2024-11-14:19:27:27 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:27:27 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:27:27 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:27:27 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:27:34 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.29608678817749 s
2024-11-14:19:27:34 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:27:34 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:28:02 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 5.8801951673295765,
 'clean_test_loss_avg_over_batch': 1.8138884097337722,
 'epoch': 76,
 'test_acc': 0.4438,
 'test_asr': 0.05255555555555556,
 'test_ra': 0.35588888888888887,
 'train_acc': 0.8372,
 'train_acc_clean_only': 0.8372,
 'train_epoch_loss_avg_over_batch': 0.5089936822652816}
2024-11-14:19:28:02 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:28:02 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:28:02 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:28:03 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:28:10 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.298501014709473 s
2024-11-14:19:28:10 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:28:10 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:28:38 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 6.326937874158223,
 'clean_test_loss_avg_over_batch': 1.8190442770719528,
 'epoch': 77,
 'test_acc': 0.4529,
 'test_asr': 0.04455555555555556,
 'test_ra': 0.36777777777777776,
 'train_acc': 0.8348,
 'train_acc_clean_only': 0.8348,
 'train_epoch_loss_avg_over_batch': 0.5009370565414428}
2024-11-14:19:28:38 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:28:38 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:28:38 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:28:38 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:28:45 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.290893793106079 s
2024-11-14:19:28:45 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:28:45 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:29:13 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 5.634991023275587,
 'clean_test_loss_avg_over_batch': 1.8415806770324707,
 'epoch': 78,
 'test_acc': 0.4444,
 'test_asr': 0.058777777777777776,
 'test_ra': 0.3586666666666667,
 'train_acc': 0.8504,
 'train_acc_clean_only': 0.8504,
 'train_epoch_loss_avg_over_batch': 0.4832783639431}
2024-11-14:19:29:13 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:29:13 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:29:13 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:29:14 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:29:21 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.29569411277771 s
2024-11-14:19:29:21 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:29:21 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:29:48 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 5.636320379045275,
 'clean_test_loss_avg_over_batch': 1.8080517917871475,
 'epoch': 79,
 'test_acc': 0.4498,
 'test_asr': 0.05644444444444444,
 'test_ra': 0.37466666666666665,
 'train_acc': 0.8544,
 'train_acc_clean_only': 0.8544,
 'train_epoch_loss_avg_over_batch': 0.464929524064064}
2024-11-14:19:29:49 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:29:49 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:29:49 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:29:49 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:29:56 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.323832035064697 s
2024-11-14:19:29:56 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:29:56 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:30:24 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 5.398962312274509,
 'clean_test_loss_avg_over_batch': 1.8437974542379378,
 'epoch': 80,
 'test_acc': 0.4433,
 'test_asr': 0.06333333333333334,
 'test_ra': 0.3631111111111111,
 'train_acc': 0.8524,
 'train_acc_clean_only': 0.8524,
 'train_epoch_loss_avg_over_batch': 0.449700140953064}
2024-11-14:19:30:24 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:30:24 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:30:24 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:30:25 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:30:32 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.30243182182312 s
2024-11-14:19:30:32 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:30:32 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:30:59 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 5.522395743264092,
 'clean_test_loss_avg_over_batch': 1.8552753537893296,
 'epoch': 81,
 'test_acc': 0.4481,
 'test_asr': 0.06277777777777778,
 'test_ra': 0.36277777777777775,
 'train_acc': 0.8696,
 'train_acc_clean_only': 0.8696,
 'train_epoch_loss_avg_over_batch': 0.4377233386039734}
2024-11-14:19:31:00 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:31:00 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:31:00 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:31:00 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:31:07 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.301212787628174 s
2024-11-14:19:31:07 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:31:07 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:31:35 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 5.726251734627618,
 'clean_test_loss_avg_over_batch': 1.8840929985046386,
 'epoch': 82,
 'test_acc': 0.4492,
 'test_asr': 0.059333333333333335,
 'test_ra': 0.36777777777777776,
 'train_acc': 0.8624,
 'train_acc_clean_only': 0.8624,
 'train_epoch_loss_avg_over_batch': 0.43045068085193633}
2024-11-14:19:31:35 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:31:35 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:31:35 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:31:35 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:31:42 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.286031723022461 s
2024-11-14:19:31:42 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:31:42 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:32:10 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 5.79632388220893,
 'clean_test_loss_avg_over_batch': 1.8549572616815566,
 'epoch': 83,
 'test_acc': 0.4533,
 'test_asr': 0.052,
 'test_ra': 0.37855555555555553,
 'train_acc': 0.8676,
 'train_acc_clean_only': 0.8676,
 'train_epoch_loss_avg_over_batch': 0.4297960788011551}
2024-11-14:19:32:10 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:32:10 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:32:10 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:32:11 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:32:18 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.299024343490601 s
2024-11-14:19:32:18 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:32:18 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:32:46 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 5.82977999581231,
 'clean_test_loss_avg_over_batch': 1.8762257397174835,
 'epoch': 84,
 'test_acc': 0.4484,
 'test_asr': 0.058333333333333334,
 'test_ra': 0.36933333333333335,
 'train_acc': 0.8776,
 'train_acc_clean_only': 0.8776,
 'train_epoch_loss_avg_over_batch': 0.4004601687192917}
2024-11-14:19:32:46 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:32:46 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:32:46 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:32:46 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:32:53 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.299391746520996 s
2024-11-14:19:32:53 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:32:53 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:33:21 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 5.673702955245972,
 'clean_test_loss_avg_over_batch': 1.8853257656097413,
 'epoch': 85,
 'test_acc': 0.4497,
 'test_asr': 0.06155555555555556,
 'test_ra': 0.3708888888888889,
 'train_acc': 0.8732,
 'train_acc_clean_only': 0.8732,
 'train_epoch_loss_avg_over_batch': 0.41430422365665437}
2024-11-14:19:33:21 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:33:21 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:33:21 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:33:22 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:33:29 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.326410293579102 s
2024-11-14:19:33:29 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:33:29 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:33:57 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 6.065121981832716,
 'clean_test_loss_avg_over_batch': 1.8788871228694917,
 'epoch': 86,
 'test_acc': 0.4502,
 'test_asr': 0.052333333333333336,
 'test_ra': 0.3708888888888889,
 'train_acc': 0.884,
 'train_acc_clean_only': 0.884,
 'train_epoch_loss_avg_over_batch': 0.3965654343366623}
2024-11-14:19:33:57 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:33:57 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:33:57 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:33:57 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:34:04 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.294931173324585 s
2024-11-14:19:34:04 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:34:04 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:34:32 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 5.8792909781138105,
 'clean_test_loss_avg_over_batch': 1.8770488172769546,
 'epoch': 87,
 'test_acc': 0.451,
 'test_asr': 0.05477777777777778,
 'test_ra': 0.37366666666666665,
 'train_acc': 0.888,
 'train_acc_clean_only': 0.888,
 'train_epoch_loss_avg_over_batch': 0.3962702006101608}
2024-11-14:19:34:32 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:34:32 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:34:32 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:34:33 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:34:40 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.305529594421387 s
2024-11-14:19:34:40 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:34:40 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:35:07 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 5.695183277130127,
 'clean_test_loss_avg_over_batch': 1.8648141086101533,
 'epoch': 88,
 'test_acc': 0.4508,
 'test_asr': 0.059111111111111114,
 'test_ra': 0.37566666666666665,
 'train_acc': 0.8972,
 'train_acc_clean_only': 0.8972,
 'train_epoch_loss_avg_over_batch': 0.36746674180030825}
2024-11-14:19:35:08 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:35:08 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:35:08 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:35:08 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:35:15 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.298301696777344 s
2024-11-14:19:35:15 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:35:15 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:35:43 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 5.7317747539944115,
 'clean_test_loss_avg_over_batch': 1.9034735172986985,
 'epoch': 89,
 'test_acc': 0.452,
 'test_asr': 0.058888888888888886,
 'test_ra': 0.3728888888888889,
 'train_acc': 0.8908,
 'train_acc_clean_only': 0.8908,
 'train_epoch_loss_avg_over_batch': 0.3692279040813446}
2024-11-14:19:35:43 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:35:43 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:35:43 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:35:43 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:35:50 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.302692174911499 s
2024-11-14:19:35:50 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:35:50 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:36:18 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 5.9142268896102905,
 'clean_test_loss_avg_over_batch': 1.8962793976068497,
 'epoch': 90,
 'test_acc': 0.4546,
 'test_asr': 0.05366666666666667,
 'test_ra': 0.37466666666666665,
 'train_acc': 0.9068,
 'train_acc_clean_only': 0.9068,
 'train_epoch_loss_avg_over_batch': 0.35325661599636077}
2024-11-14:19:36:18 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:36:18 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:36:19 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:36:19 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:36:26 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.288780450820923 s
2024-11-14:19:36:26 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:36:26 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:36:54 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 5.610348648495144,
 'clean_test_loss_avg_over_batch': 1.8953094184398651,
 'epoch': 91,
 'test_acc': 0.4522,
 'test_asr': 0.065,
 'test_ra': 0.37266666666666665,
 'train_acc': 0.8908,
 'train_acc_clean_only': 0.8908,
 'train_epoch_loss_avg_over_batch': 0.3632145464420319}
2024-11-14:19:36:54 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:36:54 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:36:54 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:36:54 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:37:01 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.326753377914429 s
2024-11-14:19:37:01 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:37:01 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:37:29 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 5.822146005100674,
 'clean_test_loss_avg_over_batch': 1.8722856312990188,
 'epoch': 92,
 'test_acc': 0.4523,
 'test_asr': 0.059444444444444446,
 'test_ra': 0.37122222222222223,
 'train_acc': 0.8968,
 'train_acc_clean_only': 0.8968,
 'train_epoch_loss_avg_over_batch': 0.3616823822259903}
2024-11-14:19:37:29 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:37:29 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:37:30 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:37:30 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:37:37 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.307007789611816 s
2024-11-14:19:37:37 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:37:37 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:38:05 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 5.8235264089372425,
 'clean_test_loss_avg_over_batch': 1.8836638897657394,
 'epoch': 93,
 'test_acc': 0.4525,
 'test_asr': 0.05688888888888889,
 'test_ra': 0.37455555555555553,
 'train_acc': 0.9032,
 'train_acc_clean_only': 0.9032,
 'train_epoch_loss_avg_over_batch': 0.3523476362228394}
2024-11-14:19:38:05 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:38:05 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:38:05 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:38:05 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:38:12 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.285890340805054 s
2024-11-14:19:38:12 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:38:12 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:38:40 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 5.904647058910793,
 'clean_test_loss_avg_over_batch': 1.8939941287040711,
 'epoch': 94,
 'test_acc': 0.4533,
 'test_asr': 0.05477777777777778,
 'test_ra': 0.37244444444444447,
 'train_acc': 0.9076,
 'train_acc_clean_only': 0.9076,
 'train_epoch_loss_avg_over_batch': 0.3494448184967041}
2024-11-14:19:38:40 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:38:40 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:38:40 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:38:41 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:38:48 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.298992156982422 s
2024-11-14:19:38:48 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:38:48 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:39:15 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 5.908984197510613,
 'clean_test_loss_avg_over_batch': 1.8834824562072754,
 'epoch': 95,
 'test_acc': 0.4534,
 'test_asr': 0.05444444444444444,
 'test_ra': 0.37244444444444447,
 'train_acc': 0.898,
 'train_acc_clean_only': 0.898,
 'train_epoch_loss_avg_over_batch': 0.356004923582077}
2024-11-14:19:39:16 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:39:16 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:39:16 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:39:16 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:39:23 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.295905113220215 s
2024-11-14:19:39:23 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:39:23 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:39:51 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 5.861826300621033,
 'clean_test_loss_avg_over_batch': 1.8877338916063309,
 'epoch': 96,
 'test_acc': 0.4531,
 'test_asr': 0.05588888888888889,
 'test_ra': 0.37377777777777776,
 'train_acc': 0.8916,
 'train_acc_clean_only': 0.8916,
 'train_epoch_loss_avg_over_batch': 0.3690558820962906}
2024-11-14:19:39:51 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:39:51 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:39:51 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:39:52 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:39:58 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.291304111480713 s
2024-11-14:19:39:58 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:39:58 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:40:26 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 5.855220516522725,
 'clean_test_loss_avg_over_batch': 1.897968351840973,
 'epoch': 97,
 'test_acc': 0.453,
 'test_asr': 0.05633333333333333,
 'test_ra': 0.37366666666666665,
 'train_acc': 0.8984,
 'train_acc_clean_only': 0.8984,
 'train_epoch_loss_avg_over_batch': 0.35236145555973053}
2024-11-14:19:40:27 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:40:27 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:40:27 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:40:27 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:40:34 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.329129695892334 s
2024-11-14:19:40:34 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:40:34 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:41:02 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 5.825180914666918,
 'clean_test_loss_avg_over_batch': 1.8664683192968368,
 'epoch': 98,
 'test_acc': 0.453,
 'test_asr': 0.05655555555555555,
 'test_ra': 0.37433333333333335,
 'train_acc': 0.902,
 'train_acc_clean_only': 0.902,
 'train_epoch_loss_avg_over_batch': 0.3518919706344604}
2024-11-14:19:41:02 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:41:02 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:41:02 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:41:03 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:41:10 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 7.302256107330322 s
2024-11-14:19:41:10 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:41:10 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
2024-11-14:19:41:37 [INFO    ] [trainer_cls.py:65] {'batch': 10,
 'bd_test_loss_avg_over_batch': 5.843965623113844,
 'clean_test_loss_avg_over_batch': 1.8882637560367583,
 'epoch': 99,
 'test_acc': 0.4531,
 'test_asr': 0.056666666666666664,
 'test_ra': 0.3741111111111111,
 'train_acc': 0.896,
 'train_acc_clean_only': 0.896,
 'train_epoch_loss_avg_over_batch': 0.351090669631958}
2024-11-14:19:41:38 [WARNING ] [trainer_cls.py:916] train_asr_list contains None, or len not match
2024-11-14:19:41:38 [WARNING ] [trainer_cls.py:920] train_ra_list contains None, or len not match
2024-11-14:19:41:38 [DEBUG   ] [trainer_cls.py:72] return df with np.nan and None converted by str()
2024-11-14:19:41:38 [DEBUG   ] [trainer_cls.py:88] return df with np.nan and None converted by str()
2024-11-14:19:41:38 [INFO    ] [save_load_attack.py:176] saving...
2024-11-14:19:41:38 [DEBUG   ] [save_load_attack.py:177] location : record/blended_0_1_ViT/defense/fp/defense_result.pt
