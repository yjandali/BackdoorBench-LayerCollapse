2024-11-15:16:33:36 [INFO    ] [MG.py:179] {'amp': True,
 'batch_size': 128,
 'checkpoint_load': None,
 'checkpoint_save': 'record/badnet_0_1_RN18/defense/mg_reg1_ratio05_frac03_seed1/checkpoint/',
 'client_optimizer': 'sgd',
 'dataset': 'cifar10',
 'dataset_path': './data/cifar10',
 'device': 'cuda:0',
 'epochs': 20,
 'experiment_name': 'mg_reg1_ratio05_frac03_seed1',
 'fraction': 0.3,
 'frequency_save': 0,
 'img_size': (32, 32, 3),
 'index': None,
 'input_channel': 3,
 'input_height': 32,
 'input_width': 32,
 'log': 'record/badnet_0_1_RN18/defense/mg_reg1_ratio05_frac03_seed1/log/',
 'lr': 0.01,
 'lr_scheduler': 'CosineAnnealingLR',
 'model': 'preactresnet18',
 'non_blocking': True,
 'num_classes': 10,
 'num_workers': 4,
 'pin_memory': True,
 'prefetch': False,
 'random_seed': 1,
 'ratio': 0.05,
 'reg_strength': 1.0,
 'result_file': 'badnet_0_1_RN18',
 'save_path': 'record/badnet_0_1_RN18/defense/mg_reg1_ratio05_frac03_seed1/',
 'sgd_momentum': 0.9,
 'terminal_info': ['./defense/MG.py',
                   '--result_file',
                   'badnet_0_1_RN18',
                   '--yaml_path',
                   './config/defense/MG/cifar10.yaml',
                   '--dataset',
                   'cifar10',
                   '--fraction',
                   '0.3',
                   '--reg_strength',
                   '1.',
                   '--ratio',
                   '0.05',
                   '--experiment_name',
                   'mg_reg1_ratio05_frac03_seed1',
                   '--random_seed',
                   '1',
                   '--model',
                   'preactresnet18'],
 'wd': 0.0005,
 'yaml_path': './config/defense/MG/cifar10.yaml'}
2024-11-15:16:33:36 [INFO    ] [MG.py:182] {'git hash': None,
 'last 3 log': 'commit f2ca5f8f4b58e07a407dd65ca217f11673aba63d\n'
               'Author: soheilzi <soheil.zibakhsh@gmail.com>\n'
               'Date:   Tue Nov 12 09:46:15 2024 -0800\n'
               '\n'
               '    added the adverserial test, added the trojan tests with '
               'MG\n'
               '\n'
               'commit afd704e7564791ddc0ae120c7d2e1581bd3a4f80\n'
               'Author: Yaman <yamanjandali@gmail.com>\n'
               'Date:   Fri Nov 8 16:15:34 2024 -0800\n'
               '\n'
               '    removed added files\n'
               '\n'
               'commit 9bc0c704e4be5beff4562e38a15f0b4e070bb433\n'
               'Author: Yaman <yamanjandali@gmail.com>\n'
               'Date:   Tue Nov 5 10:24:03 2024 -0800\n'
               '\n'
               '    updated train_settings_generate.py file',
 'status': 'On branch main\n'
           "Your branch is up to date with 'origin/main'.\n"
           '\n'
           'Changes not staged for commit:\n'
           '  (use "git add <file>..." to update what will be committed)\n'
           '  (use "git restore <file>..." to discard changes in working '
           'directory)\n'
           '\tmodified:   config/defense/MG/cifar10.yaml\n'
           '\tmodified:   config/defense/fp/cifar10.yaml\n'
           '\tmodified:   config/defense/ft-sam/cifar10.yaml\n'
           '\tmodified:   config/defense/nc/cifar10.yaml\n'
           '\tmodified:   defense/MG.py\n'
           '\tmodified:   defense/MG_utils.py\n'
           '\tmodified:   defense/collapsible_MLP.py\n'
           '\tmodified:   test_model.ipynb\n'
           '\n'
           'Untracked files:\n'
           '  (use "git add <file>..." to include in what will be committed)\n'
           '\tdefense/MG_resnet.py\n'
           '\trecord/badnet_0_1_RN18/\n'
           '\trecord/badnet_0_1_ViT/\n'
           '\trecord/blended_0_1_ViT/\n'
           '\trecord/wanet_0_1_ViT/\n'
           '\n'
           'no changes added to commit (use "git add" and/or "git commit -a")'}
2024-11-15:16:33:41 [INFO    ] [bd_dataset_v2.py:133] save file format is .png
2024-11-15:16:33:41 [INFO    ] [trainer_cls.py:985] Do NOT set the settings/parameters attr manually after you start training!
You may break the relationship between them.
2024-11-15:16:33:41 [INFO    ] [trainer_cls.py:1043] ('epoch_now:0, '
 'batch_now:0self.amp:True,self.criterion:functools.partial(<function '
 'criterion_function at 0x7f08b0df7c10>, fraction=0.3, '
 'reg_strength=1.0),self.optimizer:SGD (\n'
 'Parameter Group 0\n'
 '    dampening: 0\n'
 '    initial_lr: 0.01\n'
 '    lr: 0.01\n'
 '    maximize: False\n'
 '    momentum: 0.9\n'
 '    nesterov: False\n'
 '    weight_decay: 0.0005\n'
 "),self.scheduler:{'T_max': 100, 'eta_min': 0, 'base_lrs': [0.01], "
 "'last_epoch': 0, '_step_count': 1, 'verbose': False, "
 "'_get_lr_called_within_step': False, '_last_lr': "
 "[0.01]},self.scaler:{'scale': 65536.0, 'growth_factor': 2.0, "
 "'backoff_factor': 0.5, 'growth_interval': 2000, '_growth_tracker': 0})")
